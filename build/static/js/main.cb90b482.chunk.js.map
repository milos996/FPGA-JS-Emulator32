{"version":3,"sources":["services/cpu/CpuParser.js","services/cpu/CpuEngine.js","constants/registers.js","constants/instructions.js","services/parsers/FileParser.js","context/Context.js","store/Actions.js","components/ControlComponent.js","constants/output.js","components/OutputComponent.js","components/RegistersAndFlagsComponent.js","pages/HomePage.js","store/Reducer.js","store/ActionHandlers.js","App.js","serviceWorker.js","index.js","constants/general.js","services/instructions/Instruction.js"],"names":["CpuParser","memory","symbolTable","address","lines","addressInstruction","instruction","getInstruction","console","log","setContent","lineLength","push","tableLine","hasArgument","argumentLength","assembler","constructor","name","includes","instructionRegister","group","source","destination","InstructionObject","INSTRUCTIONS","hasOwnProperty","Instruction","InstructionClass","class","type","classI","default","cpuParser","cpuEngine","this","irq0","irq2_pressed","irq2_released","irq0_address","irq2_pressed_address","irq2_released_address","inIrq","context","running","instructionResponse","prepareIrq","fix","pc","exec","error","shouldRunAgain","sp","Math","floor","f","CpuParserClass","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","r13","h","field","value","REGISTER_VALUE_NAME_MAPPER","0","1","2","3","4","5","6","7","8","9","10","11","12","13","15","14","INSTRUCTION_TYPES","ADD_W","ADD_S","ADD_B","SUB_W","SUB_S","AND_W","OR_W","XOR_W","SHL_W","SHR_W","MUL_W","DIV_W","AND_S","OR_S","XOR_S","SHL_S","SHR_S","MUL_S","DIV_S","SUB_B","AND_B","OR_B","XOR_B","SHL_B","SHR_B","MUL_B","DIV_B","FADD","FSUB","FMUL","FDIV","INSTRUCTIONS_TYPES_NAMES","fileParser","file","data","extension","split","pop","FILE_EXTENSIONS","ASM","asmParse","BIN","binParse","SYM","symParse","Promise","resolve","reject","reader","FileReader","onload","e","buffer","result","Array","MEMORY_SIZE","fill","words","i","length","word","intNum","parseInt","readAsText","t","t1","t2","int32View","Int8Array","readAsArrayBuffer","map","index","element","trim","splitParts","ApplicationContext","React","createContext","state","dispatch","SET_MEMORY","SET_INSTRUCTIONS","SET_CONTEXT","UPDATE_OUTPUT","SET_SYMBOLS","ControlComponent","useState","files","setFiles","useContext","a","inject","runnn","setTimeout","run","payload","content","useEffect","binFile","symFile","parse","symData","parseFile","Object","keys","instructionsSet","parseInstructions","id","accept","onChange","input","loadFiles","currentTarget","multiple","onClick","WHITE","BLACK","COLORS","COLORS_MAPPER","MAPPER_FUNCTION_FOR_OUTPUT","OUTPUT_MODES","TEXT","foregroundColor","getTextColor","backgroundColor","String","fromCharCode","inverse","groupColor","OutputComponent","apply","el","output","setOutput","outputPayload","calculatedValueWithColors","outputMode","findIndex","slice","sort","b","firstElement","secondElement","updateOutput","className","key","style","color","BINARY_CONVERSION","LABELS_FOR_FLAGS","RegistersAndFlagsComponent","contextKey","label","toUpperCase","toString","formatRegisterAndFlags","HomePage","initialState","reducer","action","ACTION_HANDLER","alert","Actions","currState","symbolsMapper","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","SHORT_NUMBER","MIN","MAX","GRAPHICS_MODE_320_240","GRAPHICS_MODE_640_480","argument","symbolAddress","addrStr","opcode","ssource","sdestination","isJump","symbols","formatUtil","Error","w1","w2","fixInt","fix8","format","argumentSymbol","l","k","j","sa","sign","r","arg","c1","c2","w","realAddress","uart","Date"],"mappings":"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","file":"static/js/main.cb90b482.chunk.js","sourcesContent":["import { INSTRUCTIONS } from '@/constants/instructions';\nimport Instruction from '@/services/instructions/Instruction'\n\nclass CpuParser {\n  async parse(memory, symbolTable) {\n    let address = 0;\n    let lines = [];\n    let addressInstruction = {};\n\n    while (address <= 100000) {\n      let instruction\n\n      try {\n        instruction = await CpuParser.getInstruction(address, memory, symbolTable);\n      } catch (e) {\n        console.log(e);\n      }\n\n      address += 2;\n      instruction.setContent();\n      const lineLength = lines.push(instruction);\n      instruction.tableLine = lineLength - 1;\n\n      //TODO: Maybe without hasArgument in instructions, argumentLength could be 0 at the beginning\n      if (instruction.hasArgument) {\n        address += instruction.argumentLength;\n      }\n\n      if (instruction.assembler !== 'nop') {\n\n        if (`INSTRUCTION -> ${instruction.assembler}  ----  ${instruction.constructor.name}`.includes('r2, 642120')) {\n            console.log({address});\n        }\n\n        console.log(`${address}. INSTRUCTION -> ${instruction.assembler}  ----  ${instruction.constructor.name}`);\n      }\n\n      addressInstruction[instruction.address] = instruction;\n    }\n    console.log('GOTOVO PARSIRANJE')\n\n    return {\n      lines,\n      addressInstruction\n    };\n  }\n\n  static async getInstruction(address, memory, symbolTable) {\n    const instructionRegister = memory[address / 2];\n    const group = (instructionRegister >> 4) & 0xf;\n    const source = (instructionRegister >> 12) & 0xf;\n    const destination = (instructionRegister >> 8) & 0xf;\n    let InstructionObject;\n\n    try {\n      InstructionObject = INSTRUCTIONS[instructionRegister & 0xf]\n\n      if (!InstructionObject.hasOwnProperty(group)) {\n        return new Instruction(memory, address , 0, 0, symbolTable)\n      }\n\n      InstructionObject = InstructionObject[group]\n    } catch (e) {\n      return new Instruction(memory, address , 0, 0, symbolTable)\n    }\n\n    const {class: InstructionClass, type = null} = InstructionObject\n\n    const classI = await InstructionClass()\n\n    if (!!type) {\n      return new classI.default(memory, address , source, destination, type, symbolTable);\n    }\n\n    return new classI.default(memory, address , source, destination, symbolTable);\n  }\n}\n\nconst cpuParser = new CpuParser();\nexport  {\n  cpuParser,\n  CpuParser as CpuParserClass\n};\n","import { CpuParserClass } from '@/services/cpu/CpuParser'\nimport Instruction from '@/services/instructions/Instruction'\n\nclass CpuEngine {\n\tconstructor() {\n\t\tthis.irq0 = false\n\t\tthis.irq2_pressed = false\n\t\tthis.irq2_released = false\n\n\t\tthis.irq0_address = 8\n\t\tthis.irq2_pressed_address = 32\n\t\tthis.irq2_released_address = 40\n\t\tthis.inIrq = false\n\n\t\tthis.memory = []\n\t\tthis.lines = []\n\t\tthis.addressInstruction = {}\n\n\t\tthis.context = {}\n\n\t\tthis.running = true\n\t}\n\n  run() {\n\t\tlet instructionResponse;\n\n\t\tif (\n\t\t\tthis.irq0 ||\n\t\t\tthis.irq2_pressed ||\n\t\t\tthis.irq2_released\n\t\t) {\n\t\t\tthis.prepareIrq()\n\t\t}\n\n\t\tconst instruction = this.addressInstruction[Instruction.fix(this.context.pc)]\n\n\t\tconsole.log('PC: ', this.context.pc)\n\n\n\t\t// if (instruction.breakPoint) {\n\t\t// \tthis.stop()\n\t\t// \tbreak\n\t\t// }\n\n\n\t\ttry {\n\t\t\t// if (instruction.constructor.name !== 'Nop') {\n\t\t\t// \tconsole.log(`INSTRUCTION -> ${instruction.assembler}  ----  ${instruction.constructor.name}`);\n\n\t\t\t// \t// if (`INSTRUCTION -> ${instruction.assembler}  ----  ${instruction.constructor.name}` === 'INSTRUCTION -> jp(jge) 0x%08x b29e  ----  JP_XX') {\n\t\t\t// \t// \tconst a=0\n\t\t\t// \t// }\n\t\t\t// }\n\n\t\t\tinstructionResponse = instruction.exec({\n\t\t\t\tcontext: this.context,\n\t\t\t\tmemory: this.memory\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tthis.running = false\n\t\t\tconsole.log(error)\n\t\t}\n\n\t\t// if (this.debug) {\n\t\t// }\n\n\t\treturn {\n\t\t\tshouldRunAgain: this.running,\n\t\t\tcontext: this.context,\n\t\t\tmemory: this.memory,\n\t\t\tinstructionResponse: {\n\t\t\t\t...instructionResponse,\n\t\t\t}\n\t\t}\n  }\n\n  prepareIrq() {\n\t\tif (this.irq0 && this.memory[this.irq0_address] === 0) {\n\t\t\t// synchronized (this) { this.notify() }\n\t\t\treturn\n\t\t}\n\n\t\tif (this.irq2_pressed && this.memory[this.irq2_pressed_address / 2] === 0) {\n\t\t\t// synchronized (this) { this.notify() }\n\t\t\treturn\n\t\t}\n\n\t\tif (this.irq2_released && this.memory[this.irq2_released_address / 2] === 0) {\n\t\t\t// synchronized (this) { this.notify() }\n\t\t\treturn\n\t\t}\n\n\t\t// Push flags\n\t\tthis.context.sp -= 2\n\t\tthis.memory[Math.floor(Instruction.fix(this.context.sp) / 2)] = this.context.f\n\n\t\t// Push PC\n\t\tthis.context.sp -= 4\n\t\tthis.memory[Math.floor(Instruction.fix(this.context.sp) / 2)] = this.context.pc  >> 16\n\t\tthis.memory[Math.floor(Instruction.fix(this.context.sp + 2) / 2)] = this.context.pc  & 0xFFFF\n\n\t\tif (this.irq0) {\n\t\t\t// Jump to the IRQ1 handler\n\t\t\tthis.context.pc  = this.irq0_address\n\n\t\t\tlet instruction = CpuParserClass.getInstruction(this.memory, this.irq0_address)\n\t\t\tinstruction.setContent()\n\n\t\t\tthis.lines[this.irq0_address] = instruction\n\n\t\t\tinstruction.tableLine = this.irq0_address\n\n\t\t\tthis.addressInstruction[this.irq0_address] = instruction\n\n\t\t\tthis.irq0 = false\n\t\t} else if (this.irq2_pressed) {\n\t\t\tthis.irq2_pressed = false\n\t\t\t// Jump to the IRQ2 pressed handler\n\n\t\t\tthis.context.pc  = this.irq2_pressed_address\n\n\t\t\tlet instruction = CpuParserClass.getInstruction(this.memory, this.irq2_pressed_address)\n\t\t\tinstruction.setContent()\n\n\t\t\tthis.lines[this.irq2_pressed_address]= instruction\n\n\t\t\tinstruction.tableLine = this.irq2_pressed_address\n\n\t\t\tthis.addressInstruction[this.irq2_pressed_address] = instruction\n\t\t} else if (this.irq2_released) {\n\t\t\tthis.irq2_released = false\n\t\t\t// Jump to the IRQ2 released handler\n\n\t\t\tthis.context.pc  = this.irq2_released_address\n\n\t\t\tlet instruction = CpuParserClass.getInstruction(this.memory, this.irq2_released_address)\n\t\t\tinstruction.setContent()\n\n\t\t\tthis.lines[this.irq2_released_address] = instruction\n\n\t\t\tinstruction.tableLine = this.irq2_released_address\n\n\t\t\tthis.addressInstruction[this.irq2_released_address] = instruction\n\t\t}\n\t}\n\n  stop() {\n\t\t\tthis.running = false\n\n\t\t// if (this.fromStepOver) {\n\t\t// \tthis.fromStepOver = false\n\t\t// \tInstruction i = context.mdl.addr_instr[Instruction.fix(context.pc )]\n\t\t// \tif (i.breakPointStepOver) {\n\t\t// \t\ti.breakPointStepOver = false\n\t\t// \t\tthis.context.mdl.fireTableDataChanged()\n\t\t// \t}\n\t\t// }\n\t\t// refreshUI(context.mdl.addr_instr[Instruction.fix(context.pc )])\n\t}\n\n\thalt () {\n\t\tthis.running = false\n\t}\n\n\tinject(memory, lines, addressInstruction) {\n\t\tthis.memory = memory\n\t\tthis.lines = lines\n\t\tthis.addressInstruction = addressInstruction\n\n\t\tthis.context = {\n\t\t\tr0: 0,\n\t\t\tr1: 0,\n\t\t\tr2: 0,\n\t\t\tr3: 0,\n\t\t\tr4: 0,\n\t\t\tr5: 0,\n\t\t\tr6: 0,\n\t\t\tr7: 0,\n\t\t\tr8: 0,\n\t\t\tr9: 0,\n\t\t\tr10: 0,\n\t\t\tr11: 0,\n\t\t\tr12: 0,\n\t\t\tr13: 0,\n\t\t\tpc: 45056,\n\t\t\tsp: 0,\n\t\t\th: 0,\n\t\t\tf: 0\n\t\t}\n\t}\n\n\tsetContextField(field, value) {\n\t\tthis.context = {\n\t\t\t...this.context,\n\t\t\t[field]: value\n\t\t}\n\t}\n}\n\nconst cpuEngine = new CpuEngine()\n\nexport default cpuEngine\n","export const REGISTER_VALUE_NAME_MAPPER = {\n  0: 'r0',\n  1: 'r1',\n  2: 'r2',\n  3: 'r3',\n  4: 'r4',\n  5: 'r5',\n  6: 'r6',\n  7: 'r7',\n  8: 'r8',\n  9: 'r9',\n  10: 'r10',\n  11: 'r11',\n  12: 'r12',\n  13: 'r13',\n  15: 'sp',\n  14: 'h',\n}\n","// NOP/MOV/IN/OUT/PUSH/POP/RET/IRET/HALT GROUP\nconst OTHERS_GROUP = 0;\n\nconst JUMP_GROUP = 1;\nconst CALL_GROUP = 2;\nconst LOAD_STORE_GROUP = 3;\nconst ADD_SUB_GROUP = 4;\nconst AND_OR_GROUP = 5;\nconst XOR_NEG_GROUP = 6;\nconst SHL_SHR_GROUP = 7;\nconst MUL_DIV_GROUP = 8;\nconst INC_DEC_GROUP = 9;\nconst CMP_INV_GROUP = 10;\nconst FLOATING_POINT_GROUP = 11;\nconst LD_ST_GROUP = 12;\nconst ALU_CMP_W_GROUP = 13;\nconst ALU_CMP_B_GROUP = 14;\n\nexport const INSTRUCTION_TYPES = {\n  ADD_W: 19,\n  ADD_S: 1,\n  ADD_B: 10,\n  SUB_W: 20,\n  SUB_S: 2,\n  AND_W: 21,\n  OR_W: 22,\n  XOR_W: 23,\n  SHL_W: 25,\n  SHR_W: 24,\n  MUL_W: 26,\n  DIV_W: 27,\n  AND_S: 3,\n  OR_S: 4,\n  XOR_S: 5,\n  SHL_S: 7,\n  SHR_S: 6,\n  MUL_S: 8,\n  DIV_S: 9,\n  SUB_B: 11,\n  AND_B: 12,\n  OR_B: 13,\n  XOR_B: 14,\n  SHL_B: 16,\n  SHR_B: 15,\n  MUL_B: 17,\n  DIV_B: 18,\n  FADD: 28,\n  FSUB: 29,\n  FMUL: 30,\n  FDIV: 31\n}\n\nexport const INSTRUCTIONS_TYPES_NAMES = {\n  [INSTRUCTION_TYPES.ADD_S]: \"add.s \",\n  [INSTRUCTION_TYPES.SUB_S]: \"sub.s \",\n  [INSTRUCTION_TYPES.AND_S]: \"and.s \",\n  [INSTRUCTION_TYPES.OR_S]: \"or.s \",\n  [INSTRUCTION_TYPES.XOR_S]: \"xor.s \",\n  [INSTRUCTION_TYPES.SHL_S]: \"shl.s \",\n  [INSTRUCTION_TYPES.SHR_S]: \"shr.s \",\n  [INSTRUCTION_TYPES.MUL_S]: \"mul.s \",\n  [INSTRUCTION_TYPES.DIV_S]: \"div.s \",\n  [INSTRUCTION_TYPES.ADD_B]: \"add.b \",\n  [INSTRUCTION_TYPES.SUB_B]: \"sub.b \",\n  [INSTRUCTION_TYPES.AND_B]: \"and.b \",\n  [INSTRUCTION_TYPES.OR_B]: \"or.b \",\n  [INSTRUCTION_TYPES.XOR_B]: \"xor.b \",\n  [INSTRUCTION_TYPES.SHL_B]: \"shl.b \",\n  [INSTRUCTION_TYPES.SHR_B]: \"shr.b \",\n  [INSTRUCTION_TYPES.MUL_B]: \"mul.b \",\n  [INSTRUCTION_TYPES.DIV_B]: \"div.b \",\n  [INSTRUCTION_TYPES.ADD_W]: \"add.w \",\n  [INSTRUCTION_TYPES.SUB_W]: \"sub.w \",\n  [INSTRUCTION_TYPES.AND_W]: \"and.w \",\n  [INSTRUCTION_TYPES.OR_W]: \"or.w \",\n  [INSTRUCTION_TYPES.XOR_W]: \"xor.w \",\n  [INSTRUCTION_TYPES.SHL_W]: \"shl.w \",\n  [INSTRUCTION_TYPES.SHR_W]: \"shr.w \",\n  [INSTRUCTION_TYPES.MUL_W]: \"mul.w \",\n  [INSTRUCTION_TYPES.DIV_W]: \"div.w \",\n  [INSTRUCTION_TYPES.FADD]: \"fadd \",\n  [INSTRUCTION_TYPES.FSUB]: \"fsub \",\n  [INSTRUCTION_TYPES.FMUL]: \"fmul \",\n  [INSTRUCTION_TYPES.FDIV]: \"fdiv \"\n}\n\nexport const INSTRUCTIONS = {\n  [OTHERS_GROUP]: {\n    0: {class: () => import('@/services/instructions/others/Nop') },\n    1: {class: () => import('@/services/instructions/others/MovWRegXRegY') },\n    2: {class: () => import('@/services/instructions/others/MovSRegXX') },\n    3: {class: () => import('@/services/instructions/others/InRegXX') },\n    4: {class: () => import('@/services/instructions/others/OutXXReg') },\n    5: {class: () => import('@/services/instructions/others/PushReg') },\n    6: {class: () => import('@/services/instructions/others/PushXX') },\n    7: {class: () => import('@/services/instructions/others/PopReg') },\n    8: {class: () => import('@/services/instructions/others/Ret') },\n    9: {class: () => import('@/services/instructions/others/IRet') },\n    10:{class: () => import( '@/services/instructions/others/SwapRegXRegY') },\n    11:{class: () => import( '@/services/instructions/others/MovWRegXX') },\n    12:{class: () => import( '@/services/instructions/others/Irq') },\n    13:{class: () => import( '@/services/instructions/others/MovBRegXX') },\n    14:{class: () => import( '@/services/instructions/others/MovWRegXRegYXX') },\n    15:{class: () => import( '@/services/instructions/others/Halt') }\n  },\n\n  [JUMP_GROUP]: {\n    0: {class: () => import('@/services/instructions/jmp/JXX')},\n    1: {class: () => import('@/services/instructions/jmp/JzXX')},\n    2: {class: () => import('@/services/instructions/jmp/JnzXX')},\n    3: {class: () => import('@/services/instructions/jmp/JcXX')},\n    4: {class: () => import('@/services/instructions/jmp/JncXX')},\n    5: {class: () => import('@/services/instructions/jmp/JoXX')},\n    6: {class: () => import('@/services/instructions/jmp/JnoXX')},\n    7: {class: () => import('@/services/instructions/jmp/JpXX')},\n    8: {class: () => import('@/services/instructions/jmp/JnpXX')},\n    9: {class: () => import('@/services/instructions/jmp/JgXX')},\n    10: {class: () => import('@/services/instructions/jmp/JseXX')},\n    15: {class : () => import('@/services/instructions/jmp/JrReg')}\n  },\n\n  [CALL_GROUP]: {\n    0: {class: () => import('@/services/instructions/call/CallXX')},\n    1: {class: () => import('@/services/instructions/call/CallZXX')},\n    2: {class: () => import('@/services/instructions/call/CallNzXX')},\n    3: {class: () => import('@/services/instructions/call/CallCXX')},\n    4: {class: () => import('@/services/instructions/call/CallNcXX')},\n    5: {class: () => import('@/services/instructions/call/CallOXX')},\n    6: {class: () => import('@/services/instructions/call/CallNoXX')},\n    7: {class: () => import('@/services/instructions/call/CallPXX')},\n    8: {class: () => import('@/services/instructions/call/CallNpXX')},\n    9: {class: () => import('@/services/instructions/call/CallGXX')},\n    10: {class: () => import('@/services/instructions/call/CallSeXX')}\n  },\n\n  [LOAD_STORE_GROUP]: {\n    0: {class: () => import('@/services/instructions/loadstore/LdSRegXMRegY')},\n    1: {class: () => import('@/services/instructions/loadstore/LdSRegMXX')},\n    2: {class: () => import('@/services/instructions/loadstore/LdSRegXMRegYXX')},\n    3: {class: () => import('@/services/instructions/loadstore/LdBRegXMRegY')},\n    4: {class: () => import('@/services/instructions/loadstore/LdBRegMXX')},\n    5: {class: () => import('@/services/instructions/loadstore/LdBRegXMRegYXX')},\n    8: {class: () => import('@/services/instructions/loadstore/StSMRegXRegY')},\n    9: {class: () => import('@/services/instructions/loadstore/StSMXXReg')},\n    10: {class: () => import('@/services/instructions/loadstore/StSMRegXXXRegY')},\n    11: {class: () => import('@/services/instructions/loadstore/StBMRegXRegY')},\n    12: {class: () => import('@/services/instructions/loadstore/StBMXXReg')},\n    13: {class: () => import('@/services/instructions/loadstore/StBMRegXXXRegY')}\n  },\n\n  [ADD_SUB_GROUP]: {\n    0: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.ADD_W},\n    1: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.ADD_S},\n    2: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.ADD_W},\n    3: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.ADD_S},\n    4: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.ADD_B},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.SUB_W},\n    9: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.SUB_S},\n    10: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.SUB_W},\n    11: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.SUB_S},\n    12: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.SUB_B}\n  },\n\n  [AND_OR_GROUP]: {\n    0: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.AND_W},\n    1: {class: () => import('@/services/instructions/alu/AluSRegXX'),type: INSTRUCTION_TYPES.AND_S},\n    2: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.AND_W},\n    3: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.AND_S},\n    4: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.AND_B},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.OR_W},\n    9: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.OR_S},\n    10: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.OR_W},\n    11: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.OR_S},\n    12: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.OR_B}\n  },\n\n  [XOR_NEG_GROUP]: {\n    0: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.XOR_W},\n    1: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.XOR_S},\n    2: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.XOR_W},\n    3: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.XOR_S},\n    4: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.XOR_B},\n    8: {class: () => import('@/services/instructions/alu/NegWReg') },\n    10: {class: () => import('@/services/instructions/alu/NegWMreGXX') },\n    11: {class: () => import('@/services/instructions/alu/NegSMRegXX') },\n    12: {class: () => import('@/services/instructions/alu/NegBMRegXX') }\n  },\n\n  [SHL_SHR_GROUP]: {\n    0:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.SHL_W},\n    1:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.SHL_S},\n    2:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.SHL_W},\n    3:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.SHL_S},\n    4:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.SHL_B},\n    8:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.SHR_W},\n    9:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.SHR_S},\n    10:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.SHR_W},\n    11:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.SHR_S},\n    12:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.SHR_B}\n  },\n\n  [MUL_DIV_GROUP]: {\n    0:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.MUL_W },\n    1:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.MUL_S },\n    2:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.MUL_W },\n    3:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.MUL_S },\n    4:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.MUL_B },\n    8:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.DIV_W },\n    9:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.DIV_S },\n    10:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.DIV_W },\n    11:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.DIV_S },\n    12:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.DIV_B }\n  },\n\n  [INC_DEC_GROUP]: {\n    0: {class: () => import('@/services/instructions/incdec/IncWReg')},\n    1: {class: () => import('@/services/instructions/incdec/IncSMReg')},\n    2: {class: () => import('@/services/instructions/incdec/IncWMRegXX')},\n    3: {class: () => import('@/services/instructions/incdec/IncSMRegXX')},\n    4: {class: () => import('@/services/instructions/incdec/IncBMRegXX')},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    8: {class: () => import('@/services/instructions/incdec/DecWReg')},\n    9: {class: () => import('@/services/instructions/incdec/DecSMReg')},\n    10: {class: () => import('@/services/instructions/incdec/DecWMRegXX')},\n    11: {class: () => import('@/services/instructions/incdec/DecSMRegXX')},\n    12: {class: () => import('@/services/instructions/incdec/DecBMRegXX')}\n  },\n\n  [CMP_INV_GROUP]: {\n    0: {class: () => import('@/services/instructions/cmpinv/CmpWRegXRegY')},\n    1: {class: () => import('@/services/instructions/cmpinv/CmpSRegXX')},\n    2: {class: () => import('@/services/instructions/cmpinv/CmpWRegXMRegYXX')},\n    3: {class: () => import('@/services/instructions/cmpinv/CmpSRegXMRegYXX')},\n    4: {class: () => import('@/services/instructions/cmpinv/CmpBRegXMRegYXX')},\n    8: {class: () => import('@/services/instructions/cmpinv/InvWReg')},\n    10: {class: () => import('@/services/instructions/cmpinv/InvWMRegXX')},\n    11: {class: () => import('@/services/instructions/cmpinv/InvSMRegXX')},\n    12: {class: () => import('@/services/instructions/cmpinv/InvBMRegXX')}\n  },\n\n  [FLOATING_POINT_GROUP]: {\n    2: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FADD },\n    3: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FSUB },\n    4: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FMUL },\n    5: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FDIV },\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W}\n  },\n\n  [LD_ST_GROUP]: {\n    0: { class: () => import('@/services/instructions/loadstore/LdWRegXMRegY') },\n    1: { class: () => import('@/services/instructions/loadstore/LdWRegMXX') },\n    2: { class: () => import('@/services/instructions/loadstore/LdWRegXMRegYXX') },\n    3: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.OR_W},\n    4: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.XOR_W},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: { class: () => import('@/services/instructions/loadstore/StWMRegXRegY') },\n    9: { class: () => import('@/services/instructions/loadstore/StWMXXReg') },\n    10: { class: () => import('@/services/instructions/loadstore/StWMRegXXXRegY') }\n  },\n\n  [ALU_CMP_W_GROUP]: {\n    0: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.ADD_W},\n    1: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SUB_W},\n    2: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.AND_W},\n    3: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.OR_W},\n    4: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.XOR_W},\n    5: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHL_W},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.DIV_W},\n    9: { class: () => import('@/services/instructions/cmpinv/CmpWRegXX')}\n  },\n\n  [ALU_CMP_B_GROUP]: {\n    0: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.ADD_B},\n    1: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.SUB_B},\n    2: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.AND_B},\n    3: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.OR_B},\n    4: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.XOR_B},\n    5: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.SHL_B},\n    6: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.SHR_B},\n    7: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.MUL_B},\n    8: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.DIV_B},\n    9: { class: () => import('@/services/instructions/cmpinv/CmpBRegXX')}\n  }\n};\n","import { MEMORY_SIZE, FILE_EXTENSIONS } from '../../constants/general';\n\nclass FileParser {\n  async parse(file) {\n\n    if (file === null) {\n      return { data: null }\n    }\n\n   const extension = file.name.split('.').pop();\n\n    if (extension === FILE_EXTENSIONS.ASM) {\n      return await this.asmParse(file);\n    }\n\n    if (extension === FILE_EXTENSIONS.BIN) {\n      return await this.binParse(file)\n    }\n\n    if (extension === FILE_EXTENSIONS.SYM) {\n      return await this.symParse(file)\n    }\n  }\n\n  asmParse(file) {\n    // TODO Not working\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const buffer = reader.result;\n          console.log({buffer})\n\n          //TODO: Check this, how it works\n          let memory = Array(MEMORY_SIZE).fill(0);\n\n          let words = buffer.split(' ');\n          let address = 0;\n          for (let i = 0; i < words.length; i++) {\n            const word = words[i];\n            console.log({address, word, intNum: parseInt(word, 16)})\n\n            memory[address++] = parseInt(word, 16);\n            // if (EmulatorMain.DEBUG)\n            //   System.out.println(address - 1 + \": \" + w + \" == \" + memory[address - 1])\n          }\n\n          resolve({ data: memory })\n        }\n\n        reader.readAsText(file);\n      } catch (error) {\n        reject({ error })\n      }\n    })\n  }\n\n  binParse (file) {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const buffer = reader.result;\n          const int32View = new Int8Array(buffer);\n\n          let memory = Array(MEMORY_SIZE).fill(0);\n          let t, t1, t2;\n\n          for (let i = 0; i < memory.length / 2; i++) {\n            t1 = int32View[i * 2];\n\n            if (t1 < 0) {\n              t1 = 256 + t1;\n            }\n\n            t = t1 << 8;\n\n            t2 = int32View[i * 2 + 1];\n\n            if (t2 < 0) {\n              t2 = 256 + t2;\n            }\n\n            t += t2;\n\n            memory[i] = t;\n          }\n\n          resolve({ data: memory })\n        };\n\n        reader.readAsArrayBuffer(file);\n      } catch (error) {\n        reject({ error })\n      }\n    })\n  }\n\n  symParse (file) {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const lines = reader.result.split('\\n')\n\n          let map = {}\n\n          for (let index = 0; index < lines.length; index++) {\n            const element = lines[index];\n\n            if (element.trim() === '') {\n              continue\n            }\n\n            const splitParts = element.split('=')\n\n            map[splitParts[1].trim()] = splitParts[0].trim()\n          }\n\n          resolve({ data: map })\n        };\n\n        reader.readAsText(file);\n      } catch (error) {\n        reject({ error })\n      }\n    })\n  }\n}\n\nconst fileParser = new FileParser();\nexport default fileParser;\n","import React from 'react';\n\nconst initialContext = {\n  state: null,\n  dispatch: () => {}\n};\n\nconst ApplicationContext = React.createContext(initialContext);\n\nexport default ApplicationContext;\n","export const SET_MEMORY = 'SET_MEMORY'\nexport const SET_INSTRUCTIONS = 'SET_INSTRUCTIONS'\nexport const SET_CONTEXT = 'SET_CONTEXT'\nexport const UPDATE_OUTPUT = 'UPDATE_OUTPUT'\nexport const SET_SYMBOLS = 'SET_SYMBOLS'","import React, { useState, useEffect, useContext } from 'react';\nimport fileParser from '@/services/parsers/FileParser';\nimport { cpuParser } from '@/services/cpu/CpuParser'\nimport cpuEngine from '@/services/cpu/CpuEngine';\nimport ApplicationContext from '@/context/Context';\nimport { SET_MEMORY, SET_CONTEXT, SET_INSTRUCTIONS, UPDATE_OUTPUT, SET_SYMBOLS } from '@/store/Actions';\n\nexport default function ControlComponent() {\n  const [files, setFiles] = useState([]);\n  const { dispatch, state } = useContext(ApplicationContext);\n\n\n  function handleUploadFile(input) {\n    const fileInput = input.currentTarget;\n\n    const loadFiles = fileInput.files;\n\n    setFiles(loadFiles);\n  }\n\n  async function handleStart() {\n    cpuEngine.inject(state.memory, state.lines, state.addressInstruction)\n\n    // let running = true\n\n    runnn()\n\t\t// while (running) {\n    //   setTimeout( async () => {\n    //     const {\n    //       shouldRunAgain,\n    //       instructionResponse,\n    //       context,\n    //       memory\n    //     } = cpuEngine.run()\n\n    //     await dispatch({ type: SET_MEMORY, payload: memory})\n    //     await dispatch({type: SET_CONTEXT, payload: context})\n\n    //     instructionResponse.content || instructionResponse.content === 0 && await dispatch({ type: UPDATE_OUTPUT, payload: instructionResponse })\n\n    //     running = shouldRunAgain\n    //   },1000);\n\t\t// }\n  }\n\n  async function runnn() {\n    // TIMEOUT IS USED BECAUSE IF YOU WANT TO SEE IMMEDIATE OUTPUT YOU NEED TO DELAY FOR CERTAIN PERIOD\n    // SO VIEW COULD RE-RENDER THE DOM.\n    setTimeout( async () => {\n      const {\n        shouldRunAgain,\n        instructionResponse,\n        context,\n        memory\n      } = cpuEngine.run()\n\n      await dispatch({ type: SET_MEMORY, payload: memory})\n      await dispatch({type: SET_CONTEXT, payload: context})\n\n      if (instructionResponse.content || instructionResponse.content === 0) {\n        await dispatch({ type: UPDATE_OUTPUT, payload: instructionResponse })\n      }\n\n      shouldRunAgain && runnn()\n    });\n  }\n\n  useEffect(() => {\n    async function parseFile() {\n      console.log(files);\n\n      if (files.length) {\n        let binFile = files[0]\n        let symFile = null\n\n        if (files.length > 1) {\n          binFile = files[0].name.includes('.bin')\n            ? files[0]\n            : files[1]\n\n          symFile = files[0].name.includes('.sym')\n            ? files[0]\n            : files[1]\n        }\n\n        console.log(binFile);\n\n        const { data } = await fileParser.parse(binFile);\n        dispatch({ type: SET_MEMORY, payload: data });\n        console.log({data});\n\n        if (symFile) {\n          const { data: symData } = await fileParser.parse(symFile)\n          dispatch({ type: SET_SYMBOLS, payload: symData})\n        }\n\n        return\n      }\n    }\n\n    parseFile();\n  }, [files]);\n\n  useEffect(() => {\n\n    async function parseInstructions() {\n      if ((files.length > 1 && Object.keys(state.symbolTable).length) || files.length === 1) {\n        const instructionsSet = await cpuParser.parse(state.memory, state.symbolTable);\n\n        dispatch({ type: SET_INSTRUCTIONS, payload: instructionsSet });\n      }\n    }\n\n    if (state.memory.length > 0) {\n      parseInstructions()\n    }\n\n  }, [state.memory, state.symbolTable])\n\n  return (\n    <div>\n      <input\n        type='file'\n        id='avatar'\n        accept=\".bin,.sym\"\n        name='avatar'\n        onChange={handleUploadFile}\n        multiple={true}\n      />\n      <button onClick={handleStart}>Start</button>\n      {/* <ul>\n        {state.memory.slice(0, 1000).map((val, index) => (\n          <li key={index}>{val}</li>\n        ))}\n      </ul> */}\n    </div>\n  );\n        }","\nconst RED = 'red'\nconst GREEN = 'green'\nconst BLUE = 'blue'\nconst PINK = 'pink'\nconst YELLOW = 'yellow'\nconst LIGHT_BLUE = 'light_blue'\nexport const WHITE = 'white'\nexport const BLACK = 'black'\n\n\nexport const COLORS = {\n  [RED]: '#ff0000',\n  [WHITE]: '#ffffff',\n  [BLACK]: '#000000',\n  [GREEN]: '#33cc33',\n  [BLUE]: '#0000ff',\n  [PINK]: '#ff99ff',\n  [YELLOW]: '#ffff00',\n  [LIGHT_BLUE]: '#00ffff',\n}\n\nconst INVERSE = 1\nconst REGULAR = 0\n\nexport const COLORS_MAPPER = {\n  [REGULAR]: {\n    0: COLORS[BLACK],\n    1: COLORS[RED],\n    2: COLORS[GREEN],\n    3: COLORS[YELLOW],\n    4: COLORS[BLUE],\n    5: COLORS[PINK],\n    6: COLORS[LIGHT_BLUE],\n    7: COLORS[WHITE]\n  },\n  [INVERSE]: {\n    0: COLORS[WHITE],\n    1: COLORS[LIGHT_BLUE],\n    2: COLORS[PINK],\n    3: COLORS[BLUE],\n    4: COLORS[YELLOW],\n    5: COLORS[GREEN],\n    6: COLORS[RED],\n    7: COLORS[BLACK]\n  }\n}","import React, {useState, useEffect, useContext} from \"react\"\nimport ApplicationContext from '@/context/Context'\nimport { OUTPUT_MODES } from '@/constants/general'\nimport { COLORS_MAPPER, COLORS, BLACK, WHITE} from '@/constants/output'\n\n\nconst MAPPER_FUNCTION_FOR_OUTPUT = {\n  [OUTPUT_MODES.TEXT]: calculateResultText\n}\n\nfunction calculateResultText(content) {\n\n  const foregroundColor = getTextColor((~((content >> 12) & 7))  & 0xffff);\n\tconst backgroundColor = getTextColor(((content >> 8) & 7)  & 0xffff);\n\n  return {\n    value: (content & 0xff) !== 0 ? String.fromCharCode(content & 0xff) : \" \",\n    foregroundColor,\n    backgroundColor\n  }\n}\n\nfunction getTextColor(content, inverse = true) {\n  const groupColor = content & 7\n\n  try {\n    return COLORS_MAPPER[inverse ? 1 : 0][groupColor]\n  } catch (error) {\n    return COLORS[BLACK]\n  }\n}\n\nexport default function OutputComponent() {\n  // Array.apply is meant to be used for some kind of optimization but doesn't work as expected.\n  // It slows down the process even more, especially because number of elements are greater then 10000\n  const [output, setOutput] = useState(\n    Array.apply(null, Array(0)).map(\n      (el, index) => (\n        {\n          address: index,\n          value: \" \",\n          foregroundColor: COLORS[BLACK],\n          backgroundColor: COLORS[WHITE]\n        }\n      )\n    )\n  )\n  const { dispatch, state } = useContext(ApplicationContext);\n\n  useEffect(() => {\n    function updateOutput() {\n      console.log('address: ' + state.outputPayload.address + ' ,content: ' + state.outputPayload.content);\n\n      const calculatedValueWithColors = MAPPER_FUNCTION_FOR_OUTPUT[state.outputMode](state.outputPayload.content)\n      const index = output.findIndex((element) => element.address === state.outputPayload.address)\n\n      if (index !== -1) {\n        setOutput([\n          ...output.slice(0, index),\n          {\n            address: state.outputPayload.address,\n            ...calculatedValueWithColors\n          },\n          ...output.slice(index + 1)\n        ].sort((a, b) => a - b))\n      } else {\n        setOutput([\n          ...output,\n          {\n            address: state.outputPayload.address,\n            ...calculatedValueWithColors\n          }\n        ].sort((firstElement, secondElement) => firstElement.address - secondElement.address))\n      }\n    }\n\n    !!state.outputPayload && updateOutput()\n  }, [state.outputPayload])\n\n\n  function cellRenderer({columnIndex, key, rowIndex, style}) {\n    return (\n      <div key={key} style={style}>\n        <span\n            style={{\n              color:  output[rowIndex * 150 + columnIndex] ? output[rowIndex * 150 + columnIndex].foregroundColor : COLORS[WHITE],\n              backgroundColor:  output[rowIndex * 150 + columnIndex] ? output[rowIndex * 150 + columnIndex].backgroundColor : COLORS[BLACK]\n            }}\n          >\n             {output[rowIndex * 150 + columnIndex] ? output[rowIndex * 150 + columnIndex].value: \" \"}\n          </span>\n      </div>\n    );\n  }\n\n  // return (\n  //   <div>\n  //      <Grid\n  //       cellRenderer={cellRenderer}\n  //       columnCount={100}\n  //       columnWidth={20}\n  //       height={780}\n  //       rowCount={1000}\n  //       rowHeight={20}\n  //       width={800}\n  //      />\n  //   </div>\n  // )\n\n  return (\n    <div className=\"output\">\n        {output.map((element, index) =>\n          <span\n            key={index}\n            className=\"letter-spacing\"\n            style={{\n              color: element.foregroundColor,\n              backgroundColor: element.backgroundColor\n            }}\n          >\n            {element.value}\n          </span>\n        )}\n    </div>\n  )\n}\n","import React, {useState, useEffect, useContext} from \"react\"\nimport ApplicationContext from '@/context/Context'\n\nconst BINARY_CONVERSION = ['f']\nconst LABELS_FOR_FLAGS = {\n  f: 'POCZ'\n}\n\nexport default function RegistersAndFlagsComponent () {\n  const { state } = useContext(ApplicationContext);\n\n  function formatRegisterAndFlags (contextKey) {\n    const label = LABELS_FOR_FLAGS.hasOwnProperty(contextKey) ? LABELS_FOR_FLAGS[contextKey] : contextKey\n\n    if (BINARY_CONVERSION.includes(contextKey)) {\n      return `${label.toUpperCase()} : ${state.context[contextKey].toString(2)}`\n    }\n\n    return `${label.toUpperCase()} : ${state.context[contextKey].toString(16)}`\n  }\n\n  return (\n    <div className='vertical-alignment'>\n      {Object.keys(state.context).map((contextKey, index) => (\n        <span key={index}> {formatRegisterAndFlags(contextKey)} </span>\n      ))}\n    </div>\n  )\n}\n","import React from 'react';\nimport ControlComponent from '@/components/ControlComponent';\nimport OutputComponent from '@/components/OutputComponent';\nimport RegistersAndFlagsComponent from '@/components/RegistersAndFlagsComponent';\nimport StackFrameComponent from '@/components/StackFrameComponent';\nimport MemoryComponent from '@/components/MemoryComponent';\nimport InstructionsComponent from '@/components/InstructionsComponent';\n\nexport default function HomePage() {\n  return (\n    <div>\n      <h1>FPGA EMULTAOR</h1>\n      <div className=\"horizontal-alignment\">\n        <div className=\"vertical-alignment home-part-1\">\n          <ControlComponent />\n          <OutputComponent />\n        </div>\n        <div className=\"vertical-alignment\">\n          {/* <InstructionsComponent /> */}\n          <RegistersAndFlagsComponent />\n          <div className=\"horizontal-alignment\">\n            <button>Stack Frame</button>\n            <button>Memory</button>\n          </div>\n        </div>\n      </div>\n      {/* <StackFrameComponent />\n      <MemoryComponent /> */}\n    </div>\n  );\n}\n","import * as ActionHandlers from './ActionHandlers';\nimport * as Actions from './Actions';\nimport { OUTPUT_MODES } from '@/constants/general'\n\nexport const initialState = {\n  memory: [],\n  lines: [],\n  addressInstruction: {},\n  symbolTable: {},\n  context: {\n    r0: 0,\n\t\tr1: 0,\n\t\tr2: 0,\n\t\tr3: 0,\n\t\tr4: 0,\n\t\tr5: 0,\n\t\tr6: 0,\n\t\tr7: 0,\n\t\tr8: 0,\n\t\tr9: 0,\n\t\tr10: 0,\n\t\tr11: 0,\n\t\tr12: 0,\n\t\tr13: 0,\n\t\tpc: 0,\n\t\tsp: 0,\n\t\th: 0,\n\t\tf: 0\n\t},\n\toutputPayload: null,\n\toutputMode: OUTPUT_MODES.TEXT\n};\n\nexport const reducer = function(state, action) {\n  try {\n    return ACTION_HANDLER[action.type](state, action.payload);\n  } catch (error) {\n    alert('there is no action with this type');\n    return state;\n  }\n};\n\nconst ACTION_HANDLER = {\n  [Actions.SET_MEMORY]: ActionHandlers.SET_MEMORY_HANDLER,\n  [Actions.SET_INSTRUCTIONS]: ActionHandlers.SET_INSTRUCTIONS_HANDLER,\n\t[Actions.SET_CONTEXT]: ActionHandlers.SET_CONTEXT_HANDLER,\n\t[Actions.UPDATE_OUTPUT]: ActionHandlers.SET_OUTPUT_PAYLOAD_HANDLER,\n\t[Actions.SET_SYMBOLS]: ActionHandlers.SET_SYMBOLS_HANDLER\n};\n","export function SET_MEMORY_HANDLER (currState, payload) {\n  return {\n    ...currState,\n    memory: payload\n  };\n}\n\nexport function SET_INSTRUCTIONS_HANDLER (\n  currState,\n  { lines, addressInstruction }\n) {\n  return {\n    ...currState,\n    lines,\n    addressInstruction\n  };\n}\n\nexport function SET_CONTEXT_HANDLER (currState, context) {\n  return {\n    ...currState,\n    context: {\n      ...currState.context,\n      ...context\n    }\n  }\n}\nexport function SET_OUTPUT_PAYLOAD_HANDLER (currState, outputPayload) {\n  return {\n    ...currState,\n    outputPayload: { ...outputPayload }\n  }\n}\n\nexport function SET_SYMBOLS_HANDLER (currState, symbolsMapper) {\n  return {\n    ...currState,\n    symbolTable: { ...symbolsMapper }\n  }\n}","import React, { useReducer } from 'react';\nimport HomePage from './pages/HomePage';\nimport ApplicationContext from './context/Context';\nimport { reducer, initialState } from './store/Reducer';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div>\n      <ApplicationContext.Provider value={{ state, dispatch }}>\n        <HomePage />\n      </ApplicationContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","export const MEMORY_SIZE = 100000;\n\nexport const FILE_EXTENSIONS = {\n  ASM: 'asm',\n  BIN: 'bin',\n  SYM: 'sym'\n};\n\nexport const SHORT_NUMBER = {\n  MIN: -32768,\n  MAX: 32767\n}\n\nexport const OUTPUT_MODES = {\n  TEXT: 'text',\n  GRAPHICS_MODE_320_240: 'graphics_mode_320_240',\n  GRAPHICS_MODE_640_480: 'graphics_mode_640_480'\n}\n\n","import { format as formatUtil } from 'util'\nimport { SHORT_NUMBER } from '@/constants/general'\nimport { REGISTER_VALUE_NAME_MAPPER } from '@/constants/registers'\nimport cpuEngine from '@/services/cpu/CpuEngine'\n\nclass Instruction {\n\n  constructor (memory, address, source, destination, symbolTable) {\n    this.argumentLength = 2\n    this.content = ''\n    this.argument = null\n    this.symbolAddress = null\n    this.addrStr = null\n    this.source = null\n    this.destination = null\n    this.address = null\n    this.opcode = null\n    this.ssource = ''\n    this.sdestination = ''\n    this.assembler = ''\n\n    this.isJump = false\n    this.hasArgument = false\n\n    this.address = address\n    this.opcode = memory[address / 2]\n    this.source = source\n\t\tthis.destination = destination\n\t\tthis.ssource = REGISTER_VALUE_NAME_MAPPER[source]\n    this.sdestination = REGISTER_VALUE_NAME_MAPPER[destination]\n\n    this.setContent()\n\n    const symbols = symbolTable.hasOwnProperty(`0x${address.toString(16)}`) ? symbolTable[`0x${address.toString(16)}`] : null\n\n\t\tif (symbols !== null && symbols.length > 0) {\n\t\t\tthis.symbolAddress = symbols\n\t\t\tthis.addrStr = formatUtil('%s (%s)', this.address.toString(16), symbols)\n\t\t} else {\n\t\t\tthis.addrStr = formatUtil('%s', this.address.toString(16))\n\t\t\tthis.symbolAddress = this.addrStr\n\t\t}\n  }\n\n  setContent () {\n    //TODO: CHeck `format`, potential bug\n    if (!this.hasArgument) {\n      this.content = formatUtil('%s', this.opcode.toString(16))\n      return\n    }\n\n\t\tif (this.argumentLength === 4) {\n      this.content = formatUtil('%s, %s', this.opcode.toString(16), this.argument.toString(16))\n      return\n    }\n\n\t\tif (this.argumentLength === 2) {\n      this.content = formatUtil('%s, %s', this.opcode.toString(16), this.argument.toString(16))\n    }\n  }\n\n  exec ({ context, memory }) {\n\t\tthrow Error('Execution of this instruction is not possible!')\n  }\n\n  setArgument32 (memory) {\n\t\tconst w1 = memory[Math.floor((this.address + 2) / 2)]\n\t\tconst w2 = memory[Math.floor((this.address + 4) / 2)]\n\t\tthis.argument = Instruction.fixInt(w1, w2)\n\t\tthis.hasArgument = true\n\t\tthis.argumentLength = 4\n  }\n\n  setArgument8 (memory) {\n    // TODO short\n\t\tconst w1 = memory[Math.floor((this.address + 2) / 2)];\n\t\tthis.argument = Instruction.fix8(w1);\n\t\tthis.hasArgument = true;\n\t\tthis.argumentLength = 2;\n\t}\n\n\tsetArgument (memory) {\n    // TODO short\n    const w1 = memory[Math.floor((this.address + 2) / 2)];\n\n\t\tthis.argument = Instruction.fix(w1);\n\t\tthis.hasArgument = true;\n\t\tthis.argumentLength = 2;\n\t}\n\n  setAssembler(format, symbolTable) {\n\t\tif (!this.hasArgument) {\n      this.assembler = format\n      return\n    }\n\n    const argumentSymbol = symbolTable.hasOwnProperty(`0x${this.argument.toString(16)}`) ? symbolTable[`0x${this.argument.toString(16)}`] : null\n\n    // negativan broj kao argument\n\t\t// if ((this.argument & 0x80000000) !== 0) {\n\n\t\t// \tif (!!l && l.length) {\n\t\t// \t\tconst idx = this.findLabel(l)\n\n    //     if (idx === -1) {\n\t\t// \t\t\tthis.assembler = formatUtil(format + '      ; -%08x', this.argument, Instruction.neg(this.argument))\n\t\t// \t\t\treturn\n    //     }\n\n\t\t// \t\tlet format2 = format.replace(/0x/g, '')\n\t\t// \t\tformat2 = format2.replace(/02x/g, 's')\n\t\t// \t\tformat2 = format2.replace(/04x/g, 's')\n    //     format2 = format2.replace(/08x/g, 's')\n\n    //     this.assembler = formatUtil(format2 + '      ; -%08x', l.get(idx), Instruction.neg(this.argument))\n\n    //     return\n    //   }\n\n\t\t// \tthis.assembler = formatUtil(format + '      ; -%08x', this.argument, Instruction.neg(this.argument))\n\n    //   return\n    // }\n\n    if (argumentSymbol && argumentSymbol.length) {\n      this.assembler = formatUtil(format, argumentSymbol)\n      return\n    }\n\n    this.assembler = formatUtil(format, this.argument.toString(16))\n  }\n\n  findLabel(l) {\n\t\tif (l.length === 1) {\n      return 0\n    }\n\n\t\tfor (let k = this.address; k >= 0xB000; k--) {\n      const instruction = cpuEngine.addressInstruction[k]\n\n\t\t\tif (instruction === null) {\n        continue\n      }\n\n      for (let j = 0; j < l.length; j++) {\n        const lbl = l[j]\n\n\t\t\t\tif (lbl.includes(instruction.symbolAddress)) {\n\t\t\t\t\treturn j\n\t\t\t\t}\n\t\t\t}\n    }\n\n\t\tfor (let k = this.address; k < 90000; k++) {\n\t\t\tconst instruction = cpuEngine.addressInstruction[k]\n\n      if (instruction === null) {\n        continue\n      }\n\n      for (let j = 0; j < l.length; j++) {\n        const lbl = l[j]\n\n\t\t\t\tif (lbl.includes(instruction.symbolAddress)) {\n\t\t\t\t\treturn j;\n\t\t\t\t}\n\t\t\t}\n    }\n\n\t\treturn -1\n  }\n\n  static markOverflow(a, b, result, context) {\n\t\tconst sa = Instruction.sign(a);\n\t\tconst sb = Instruction.sign(b);\n    const sr = Instruction.sign(result);\n\n\t\tif (sa == sb & sa != sr) {\n      context.f |= 0x4\n\t\t\treturn\n    }\n\n\t\tcontext.f &= 0xfffb;\n  }\n\n  //TODO: first parameter `long` -->> static markFlags(long res, int r, CpuContext ctx) {\n  static markFlags(result, r, context) {\n    // Z flag\n    context.f = r == 0 ?\n      context.f | 1 :\n      context.f & 0xfffe\n\n\t\t// P flag\n    context.f =  ((r < 0) || ((r & 0x80000000) == 1)) ?\n      context.f & 0xfff7 :\n      context.f | 0x8\n\n\t\t//TODO: long number `L` -->> if ((result & 0x100000000L) != 0) {\n\t\t// C flag\n    context.f = ((result & 0x100000000) != 0) ?\n      context.f | 2 :\n      context.f & 0xd\n\t}\n\n  static sign(a) {\n    return a & 0x80000000\n  }\n\n  static neg(arg) {\n    // TODO:  (int) ((0x100000000L - arg) & 0xffffffff); <<-- Conversion to int\n\t\treturn (0x100000000 - arg) & 0xffffffff\n\t}\n\n\tstatic push (memory, address, content) {\n\t\tconst w1 = (content >> 16)\n\t\tmemory[address] = w1\n\t\tconst w2 = (content & 0xFFFF)\n\t\tmemory[address + 1] = w2\n  }\n\n  static pop (memory, address) {\n    const c1 = memory[address]\n    const c2 = memory[address + 1]\n\n    return Instruction.fixInt(c1, c2)\n  }\n\n  static fixInt (w1, w2) {\n    const i1 = w1 >= 0 ? w1 : w1 & 0xFFFF\n\n    const i2 = w2 >= 0 ? w2 : w2 & 0xFFFF\n\n\t\treturn (i1 << 16) | i2\n  }\n\n  static fix8(w) {\n    // TODO: implement this\n    // return (byte) w;\n    return w & 0b11111111\n\t}\n\n  static fix (w) {\n    if (w < SHORT_NUMBER.MIN) {\n      return w & 0xFFFF\n    }\n\n    return w & 0xFFFFFFFF\n  }\n\n  static getMemContent(context, address, realAddress, memory) {\n\t\tif (realAddress & 0x80000000 != 0) {\n\t\t\tswitch (realAddress & 0x7FFFFFFF) {\n  \t\t\t//TODO: Do not have uart inside context, maybe not necessary\n  \t\t\tcase 64: return context.uart\n  \t\t\tcase 69: return (+(new Date()) >> 20)\n        default: return 0\n\t\t\t}\n    }\n\n    /**\n     * TODO: Short types\n     *\n     * short w1 = (short) (ctx.memory[addr]);\n     * short w2 = (short) (ctx.memory[addr + 1]);\n     */\n\t\tconst w1 = memory[address]\n    const w2 = memory[address + 1]\n\n\t\treturn Instruction.fixInt(w1, w2);\n\t}\n\n  // TODO: This might not work, check original method from JAVA FPGA\n  static setMemContent(memory, address, value, realAddress) {\n    if (value < SHORT_NUMBER.MIN || value > SHORT_NUMBER.MAX) {\n      /**\n       * TODO: cast to `short`\n       *  memory[address] = (short) (val >> 16);\n       *  memory[address + 1] = (short) (val & 0xFFFF);\n       *\n      */\n      memory[address] = value >> 16\n      memory[address + 1] = value & 0xFFFF\n      return\n    }\n\n    if (realAddress & 0x80000000 == 0) {\n      memory[address] = value\n      return\n    }\n\n      // TODO: -> Check if this is necessary\n\t\t\t// int r = realAddress & 0x7FFFFFFF;\n\t\t\t// switch (r) {\n\t\t\t// case 128:\n\t\t\t// \tif (val == 1)\n\t\t\t// \t\tctx.engine.main.fbViewer.setMode(FBViewer.GRAPHICS_MODE_320_240);\n\t\t\t// \telse if (val == 2)\n\t\t\t// \t\tctx.engine.main.fbViewer.setMode(FBViewer.GRAPHICS_MODE_640_480);\n\t\t\t// \telse\n\t\t\t// \t\tctx.engine.main.fbViewer.setMode(FBViewer.TEXT_MODE);\n\t\t\t// \tbreak;\n\t\t\t// case 130:\n\t\t\t// \tif (val == 1) {\n\t\t\t// \t\tctx.engine.main.fbViewer.setInverse(true);\n\t\t\t// \t\tctx.engine.main.fbViewer.reset();\n\t\t\t// \t} else {\n\t\t\t// \t\tctx.engine.main.fbViewer.setInverse(false);\n\t\t\t// \t\tctx.engine.main.fbViewer.reset();\n\t\t\t// \t}\n\t\t\t// \tbreak;\n\t\t\t// }\n\t}\n}\n\nexport default Instruction"],"sourceRoot":""}