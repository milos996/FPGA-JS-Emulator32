{"version":3,"sources":["services/instructions/Instruction.js","utils/general.js","constants/general.js","services/cpu/CpuParser.js","constants/registers.js","constants/instructions.js","services/parsers/FileParser.js","context/Context.js","store/Actions.js","components/ControlComponent.js","constants/output.js","components/OutputComponent.js","components/RegistersAndFlagsComponent.js","components/StackFrameComponent.js","components/memory-component/MemoryCell.js","components/MemoryComponent.js","components/instructions-component/SingleInstruction.js","components/InstructionsComponent.js","pages/HomePage.js","store/ActionHandlers.js","store/Reducer.js","App.js","serviceWorker.js","index.js","services/cpu/CpuEngine.js"],"names":["Instruction","memory","address","source","destination","symbolTable","this","argumentLength","content","argument","symbolAddress","addrStr","opcode","ssource","sdestination","assembler","isJump","hasArgument","REGISTER_VALUE_NAME_MAPPER","setContent","symbols","hasOwnProperty","convertToHexNumber","toString","length","formatUtil","context","Error","w1","Math","floor","w2","fixInt","fix8","fix","format","argumentSymbol","l","k","instruction","cpuEngine","addressInstruction","j","includes","a","b","result","sa","sign","f","r","arg","c1","c2","w","SHORT_NUMBER","MIN","realAddress","uart","Date","value","MAX","number","MEMORY_SIZE","FILE_EXTENSIONS","ASM","BIN","SYM","OUTPUT_MODES","TEXT","GRAPHICS_MODE_320_240","GRAPHICS_MODE_640_480","COLORS","PRIMARY","SECONDARY","PRIMARY_LIGHT","NEUTRAL","PRIMARY_DARK","CpuParser","lines","getInstruction","console","log","lineLength","push","tableLine","constructor","name","instructionRegister","group","InstructionObject","INSTRUCTIONS","InstructionClass","class","type","classI","default","cpuParser","0","1","2","3","4","5","6","7","8","9","10","11","12","13","15","14","INSTRUCTION_TYPES","ADD_W","ADD_S","ADD_B","SUB_W","SUB_S","AND_W","OR_W","XOR_W","SHL_W","SHR_W","MUL_W","DIV_W","AND_S","OR_S","XOR_S","SHL_S","SHR_S","MUL_S","DIV_S","SUB_B","AND_B","OR_B","XOR_B","SHL_B","SHR_B","MUL_B","DIV_B","FADD","FSUB","FMUL","FDIV","INSTRUCTIONS_TYPES_NAMES","fileParser","file","data","extension","split","pop","asmParse","binParse","symParse","Promise","resolve","reject","reader","FileReader","onload","e","buffer","Array","fill","words","i","word","parseInt","readAsText","error","t","t1","t2","int32View","Int8Array","readAsArrayBuffer","map","index","element","trim","splitParts","ApplicationContext","React","createContext","state","dispatch","SET_MEMORY","SET_INSTRUCTIONS","SET_CONTEXT","UPDATE_OUTPUT","SET_SYMBOLS","HAS_SYMBOL_TABLE","RESET_STATE","SET_CURRENT_BREAKPOINT","SET_BREAKPOINTS","CLEAR_ALL_BREAKPOINTS","ControlComponent","useContext","useState","files","setFiles","stopFlag","setStopFlag","startFlag","setStartFlag","stepOverFlag","setStepOverFlag","shouldRunAgain","engineProcessedData","setEngineResponseData","inject","useEffect","binFile","symFile","parse","payload","symData","parseFile","currentBreakpoint","pc","breakpoints","processedEngineData","run","instructionResponse","id","accept","onChange","input","loadFiles","currentTarget","multiple","className","onClick","disabled","reset","BLACK","COLORS_MAPPER","MAPPER_FUNCTION_FOR_OUTPUT","foregroundColor","getTextColor","backgroundColor","String","fromCharCode","inverse","groupColor","OutputComponent","output","setOutput","outputPayload","calculatedValueWithColors","outputMode","findIndex","slice","sort","firstElement","secondElement","updateOutput","key","style","color","BINARY_CONVERSION","LABELS_FOR_FLAGS","RegistersAndFlagsComponent","Object","keys","contextKey","toUpperCase","getLabel","getValueOfContextKey","StackFrameComponent","MemoryCell","columnIndex","rowIndex","GRID_HEADERS","MemoryComponent","textAlign","height","width","display","borderBottom","header","columnCount","columnWidth","rowCount","rowHeight","gridProps","SingleInstruction","handleCheckboxInput","hasBreakpoint","isCurrentBreakpoint","background","checked","ROW_HEADER","isHeader","label","InstructionsComponent","currentPcPointer","setCurrentPcPointer","areInstructionsVisible","setInstructionsVisibility","myRef","useRef","hasSymbolTable","instructionsSet","parseInstructions","current","scrollToItem","currState","ref","itemData","itemCount","itemSize","overscanCount","border","borderRadius","itemKey","HomePage","isMemoryModalOpen","setIsMemoryModalOpen","isStackFrameModalOpen","setIsStackFrameModalOpen","top","left","right","bottom","marginRight","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","shouldCloseOnEsc","onRequestClose","initialState","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","r13","sp","h","reducer","action","ACTION_HANDLER","alert","Actions","symbolsMapper","breakpointAddress","breakpoint","instructionIndex","instructionAddress","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","irq0","irq2_pressed","irq2_released","irq0_address","irq2_pressed_address","irq2_released_address","inIrq","running","prepareIrq","exec","CpuParserClass","field"],"mappings":"wLAMMA,E,WAEJ,WAAaC,EAAQC,EAASC,EAAQC,EAAaC,GAAc,oBAC/DC,KAAKC,eAAiB,EACtBD,KAAKE,QAAU,GACfF,KAAKG,SAAW,KAChBH,KAAKI,cAAgB,KACrBJ,KAAKK,QAAU,KACfL,KAAKH,OAAS,KACdG,KAAKF,YAAc,KACnBE,KAAKJ,QAAU,KACfI,KAAKM,OAAS,KACdN,KAAKO,QAAU,GACfP,KAAKQ,aAAe,GACpBR,KAAKS,UAAY,GAEjBT,KAAKU,QAAS,EACdV,KAAKW,aAAc,EAEnBX,KAAKJ,QAAUA,EACfI,KAAKM,OAASX,EAAOC,EAAU,GAC/BI,KAAKH,OAASA,EAChBG,KAAKF,YAAcA,EACnBE,KAAKO,QAAUK,IAA2Bf,GACxCG,KAAKQ,aAAeI,IAA2Bd,GAE/CE,KAAKa,aAEL,IAAMC,EAAUf,EAAYgB,eAAeC,YAAmBpB,IAAYG,EAAYiB,YAAmBpB,EAAQqB,SAAS,MAAQ,KAEpH,OAAZH,GAAoBA,EAAQI,OAAS,GACxClB,KAAKI,cAAgBU,EACrBd,KAAKK,QAAUc,iBAAW,UAAWnB,KAAKJ,QAAQqB,SAAS,IAAKH,KAEhEd,KAAKK,QAAUc,iBAAW,KAAMnB,KAAKJ,QAAQqB,SAAS,KACtDjB,KAAKI,cAAgBJ,KAAKK,S,yDAMpBL,KAAKW,YAKgB,IAAxBX,KAAKC,eAKmB,IAAxBD,KAAKC,iBACLD,KAAKE,QAAUiB,iBAAW,SAAUnB,KAAKM,OAAOW,SAAS,IAAKjB,KAAKG,SAASc,SAAS,MALrFjB,KAAKE,QAAUiB,iBAAW,SAAUnB,KAAKM,OAAOW,SAAS,IAAKjB,KAAKG,SAASc,SAAS,KALrFjB,KAAKE,QAAUiB,iBAAW,KAAMnB,KAAKM,OAAOW,SAAS,O,8BAc9B,EAAnBG,QAAmB,EAAVzB,OACjB,MAAM0B,MAAM,oD,oCAGG1B,GACf,IAAM2B,EAAK3B,EAAO4B,KAAKC,OAAOxB,KAAKJ,QAAU,GAAK,IAC5C6B,EAAK9B,EAAO4B,KAAKC,OAAOxB,KAAKJ,QAAU,GAAK,IAClDI,KAAKG,SAAWT,EAAYgC,OAAOJ,EAAIG,GACvCzB,KAAKW,aAAc,EACnBX,KAAKC,eAAiB,I,mCAGRN,GAEd,IAAM2B,EAAK3B,EAAO4B,KAAKC,OAAOxB,KAAKJ,QAAU,GAAK,IAClDI,KAAKG,SAAWT,EAAYiC,KAAKL,GACjCtB,KAAKW,aAAc,EACnBX,KAAKC,eAAiB,I,kCAGVN,GAEV,IAAM2B,EAAK3B,EAAO4B,KAAKC,OAAOxB,KAAKJ,QAAU,GAAK,IAEpDI,KAAKG,SAAWT,EAAYkC,IAAIN,GAChCtB,KAAKW,aAAc,EACnBX,KAAKC,eAAiB,I,mCAGT4B,EAAQ9B,GACrB,GAAKC,KAAKW,YAAV,CAKE,IAAMmB,EAAiB/B,EAAYgB,eAAeC,YAAmBhB,KAAKG,WAAaJ,EAAYiB,YAAmBhB,KAAKG,WAAa,KAEpI2B,GAAkBA,EAAeZ,OACnClB,KAAKS,UAAYU,iBAAWU,EAAQC,GAItC9B,KAAKS,UAAYU,iBAAWU,EAAQ7B,KAAKG,SAASc,SAAS,UAXzDjB,KAAKS,UAAYoB,I,gCAcXE,GACV,GAAiB,IAAbA,EAAEb,OACF,OAAO,EAGX,IAAK,IAAIc,EAAIhC,KAAKJ,QAASoC,GAAK,MAAQA,IAAK,CACzC,IAAMC,EAAcC,IAAUC,mBAAmBH,GAEpD,GAAoB,OAAhBC,EAID,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAEb,OAAQkB,IAAK,CAGrC,GAFgBL,EAAEK,GAEVC,SAASJ,EAAY7B,eAC5B,OAAOgC,GAKV,IAAK,IAAIJ,EAAIhC,KAAKJ,QAASoC,EAAI,IAAOA,IAAK,CAC1C,IAAMC,EAAcC,IAAUC,mBAAmBH,GAE9C,GAAoB,OAAhBC,EAIJ,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAEb,OAAQkB,IAAK,CAGrC,GAFgBL,EAAEK,GAEVC,SAASJ,EAAY7B,eAC5B,OAAOgC,GAKV,OAAQ,K,oCAGYE,EAAGC,EAAGC,EAAQpB,GAClC,IAAMqB,EAAK/C,EAAYgD,KAAKJ,GAIxBG,GAHO/C,EAAYgD,KAAKH,GAGbE,GAFF/C,EAAYgD,KAAKF,GAG1BpB,EAAQuB,GAAK,EAIjBvB,EAAQuB,GAAK,Q,gCAIIH,EAAQI,EAAGxB,GAE1BA,EAAQuB,EAAS,GAALC,EACE,EAAZxB,EAAQuB,EACI,MAAZvB,EAAQuB,EAGVvB,EAAQuB,EAAOC,EAAI,GAA2B,IAAf,WAAJA,GACb,MAAZxB,EAAQuB,EACI,EAAZvB,EAAQuB,EAIVvB,EAAQuB,EAA+B,IAAhB,WAATH,GACA,EAAZpB,EAAQuB,EACI,GAAZvB,EAAQuB,I,2BAGAL,GACV,OAAW,WAAJA,I,0BAGEO,GAEX,OAAQ,WAAcA,EAAO,a,2BAGjBlD,EAAQC,EAASM,GAC7B,IAAMoB,EAAMpB,GAAW,GACvBP,EAAOC,GAAW0B,EAClB,IAAMG,EAAgB,MAAVvB,EACZP,EAAOC,EAAU,GAAK6B,I,0BAGV9B,EAAQC,GAClB,IAAMkD,EAAKnD,EAAOC,GACZmD,EAAKpD,EAAOC,EAAU,GAE5B,OAAOF,EAAYgC,OAAOoB,EAAIC,K,6BAGjBzB,EAAIG,GAKnB,OAJaH,GAAM,EAAIA,EAAU,MAALA,IAId,IAFDG,GAAM,EAAIA,EAAU,MAALA,K,2BAKhBuB,GAGV,OAAW,IAAJA,I,0BAGGA,GACV,OAAIA,EAAIC,IAAaC,IACR,MAAJF,EAGE,WAAJA,I,oCAGY5B,EAASxB,EAASuD,EAAaxD,GACpD,IAAkB,EAAdwD,EACH,OAAsB,WAAdA,GAEN,KAAK,GAAI,OAAO/B,EAAQgC,KACxB,KAAK,GAAI,OAAU,IAAIC,MAAW,GAC/B,QAAS,OAAO,EAUtB,IAAM/B,EAAK3B,EAAOC,GACV6B,EAAK9B,EAAOC,EAAU,GAE9B,OAAOF,EAAYgC,OAAOJ,EAAIG,K,oCAIT9B,EAAQC,EAAS0D,EAAOH,GAC3C,GAAIG,EAAQL,IAAaC,KAAOI,EAAQL,IAAaM,IASnD,OAFA5D,EAAOC,GAAW0D,GAAS,QAC3B3D,EAAOC,EAAU,GAAa,MAAR0D,IAIN,EAAdH,IACFxD,EAAOC,GAAW0D,O,KA4BT5D,O,gCCjSR,SAASsB,EAAmBwC,GACjC,MAAM,KAAN,OAAYA,EAAOvC,SAAS,KAD9B,mC,+BCAA,0KAAO,IAAMwC,EAAc,IAEdC,EAAkB,CAC7BC,IAAK,MACLC,IAAK,MACLC,IAAK,OAGMZ,EAAe,CAC1BC,KAAM,MACNK,IAAK,OAGMO,EAAe,CAC1BC,KAAM,OACNC,sBAAuB,wBACvBC,sBAAuB,yBAGZC,EAAS,CACpBC,QAAS,UACTC,UAAW,UACXC,cAAe,UACfC,QAAS,UACTC,aAAc,Y,8JCrBVC,E,uIACQ7E,EAAQI,G,+EACdH,EAAU,EACV6E,EAAQ,GACRtC,EAAqB,G,YAElBvC,GAAW,K,wBACZqC,O,oBAGkBuC,EAAUE,eAAe9E,EAASD,EAAQI,G,OAA9DkC,E,yDAEA0C,QAAQC,IAAR,M,QAGFhF,GAAW,EACXqC,EAAYpB,aACNgE,EAAaJ,EAAMK,KAAK7C,GAC9BA,EAAY8C,UAAYF,EAAa,EAGjC5C,EAAYtB,cACdf,GAAWqC,EAAYhC,gBAGK,QAA1BgC,EAAYxB,WACdkE,QAAQC,IAAR,UAAehF,EAAf,4BAA0CqC,EAAYxB,UAAtD,mBAA0EwB,EAAY+C,YAAYC,OAGpG9C,EAAmBF,EAAYrC,SAAWqC,E,8BAE5C0C,QAAQC,IAAI,gB,kBAEL,CACLH,QACAtC,uB,mMAIwBvC,EAASD,EAAQI,G,4FACrCmF,EAAsBvF,EAAOC,EAAU,GACvCuF,EAASD,GAAuB,EAAK,GACrCrF,EAAUqF,GAAuB,GAAM,GACvCpF,EAAeoF,GAAuB,EAAK,G,UAI/CE,EAAoBC,IAAmC,GAAtBH,IAEVnE,eAAeoE,G,yCAC7B,IAAIzF,IAAYC,EAAQC,EAAU,EAAG,EAAGG,I,OAGjDqF,EAAoBA,EAAkBD,G,2EAE/B,IAAIzF,IAAYC,EAAQC,EAAU,EAAG,EAAGG,I,eAGnCuF,G,EAAiCF,GAAxCG,M,IAAyBC,Y,MAAO,K,YAElBF,I,WAAfG,E,QAEAD,E,0CACG,IAAIC,EAAOC,QAAQ/F,EAAQC,EAAUC,EAAQC,EAAa0F,EAAMzF,I,iCAGlE,IAAI0F,EAAOC,QAAQ/F,EAAQC,EAAUC,EAAQC,EAAaC,I,4HAI/D4F,EAAY,IAAInB,G,gCCzEtB,kCAAO,IAAM5D,EAA6B,CACxCgF,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,KACJC,GAAI,M,qJCEOC,EAAoB,CAC/BC,MAAO,GACPC,MAAO,EACPC,MAAO,GACPC,MAAO,GACPC,MAAO,EACPC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,KAAM,GACNC,KAAM,IAGKC,GAAwB,mBAClChC,EAAkBE,MAAQ,UADQ,cAElCF,EAAkBK,MAAQ,UAFQ,cAGlCL,EAAkBa,MAAQ,UAHQ,cAIlCb,EAAkBc,KAAO,SAJS,cAKlCd,EAAkBe,MAAQ,UALQ,cAMlCf,EAAkBgB,MAAQ,UANQ,cAOlChB,EAAkBiB,MAAQ,UAPQ,cAQlCjB,EAAkBkB,MAAQ,UARQ,cASlClB,EAAkBmB,MAAQ,UATQ,cAUlCnB,EAAkBG,MAAQ,UAVQ,cAWlCH,EAAkBoB,MAAQ,UAXQ,cAYlCpB,EAAkBqB,MAAQ,UAZQ,cAalCrB,EAAkBsB,KAAO,SAbS,cAclCtB,EAAkBuB,MAAQ,UAdQ,cAelCvB,EAAkBwB,MAAQ,UAfQ,cAgBlCxB,EAAkByB,MAAQ,UAhBQ,cAiBlCzB,EAAkB0B,MAAQ,UAjBQ,cAkBlC1B,EAAkB2B,MAAQ,UAlBQ,cAmBlC3B,EAAkBC,MAAQ,UAnBQ,cAoBlCD,EAAkBI,MAAQ,UApBQ,cAqBlCJ,EAAkBM,MAAQ,UArBQ,cAsBlCN,EAAkBO,KAAO,SAtBS,cAuBlCP,EAAkBQ,MAAQ,UAvBQ,cAwBlCR,EAAkBS,MAAQ,UAxBQ,cAyBlCT,EAAkBU,MAAQ,UAzBQ,cA0BlCV,EAAkBW,MAAQ,UA1BQ,cA2BlCX,EAAkBY,MAAQ,UA3BQ,cA4BlCZ,EAAkB4B,KAAO,SA5BS,cA6BlC5B,EAAkB6B,KAAO,SA7BS,cA8BlC7B,EAAkB8B,KAAO,SA9BS,cA+BlC9B,EAAkB+B,KAAO,SA/BS,GAkCxBtD,GAAY,mBArFJ,EAsFH,CACdO,EAAG,CAACL,MAAO,kBAAM,gCACjBM,EAAG,CAACN,MAAO,kBAAM,gCACjBO,EAAG,CAACP,MAAO,kBAAM,gCACjBQ,EAAG,CAACR,MAAO,kBAAM,gCACjBS,EAAG,CAACT,MAAO,kBAAM,gCACjBU,EAAG,CAACV,MAAO,kBAAM,gCACjBW,EAAG,CAACX,MAAO,kBAAM,gCACjBY,EAAG,CAACZ,MAAO,kBAAM,gCACjBa,EAAG,CAACb,MAAO,kBAAM,gCACjBc,EAAG,CAACd,MAAO,kBAAM,gCACjBe,GAAG,CAACf,MAAO,kBAAM,gCACjBgB,GAAG,CAAChB,MAAO,kBAAM,gCACjBiB,GAAG,CAACjB,MAAO,kBAAM,gCACjBkB,GAAG,CAAClB,MAAO,kBAAM,gCACjBoB,GAAG,CAACpB,MAAO,kBAAM,gCACjBmB,GAAG,CAACnB,MAAO,kBAAM,kCAjBI,cAnFN,EAuGH,CACZK,EAAG,CAACL,MAAO,kBAAM,gCACjBM,EAAG,CAACN,MAAO,kBAAM,gCACjBO,EAAG,CAACP,MAAO,kBAAM,gCACjBQ,EAAG,CAACR,MAAO,kBAAM,gCACjBS,EAAG,CAACT,MAAO,kBAAM,gCACjBU,EAAG,CAACV,MAAO,kBAAM,gCACjBW,EAAG,CAACX,MAAO,kBAAM,gCACjBY,EAAG,CAACZ,MAAO,kBAAM,gCACjBa,EAAG,CAACb,MAAO,kBAAM,gCACjBc,EAAG,CAACd,MAAO,kBAAM,gCACjBe,GAAI,CAACf,MAAO,kBAAM,gCAClBmB,GAAI,CAACnB,MAAQ,kBAAM,kCAhCE,cAlFN,EAqHH,CACZK,EAAG,CAACL,MAAO,kBAAM,gCACjBM,EAAG,CAACN,MAAO,kBAAM,gCACjBO,EAAG,CAACP,MAAO,kBAAM,gCACjBQ,EAAG,CAACR,MAAO,kBAAM,gCACjBS,EAAG,CAACT,MAAO,kBAAM,gCACjBU,EAAG,CAACV,MAAO,kBAAM,gCACjBW,EAAG,CAACX,MAAO,kBAAM,gCACjBY,EAAG,CAACZ,MAAO,kBAAM,gCACjBa,EAAG,CAACb,MAAO,kBAAM,gCACjBc,EAAG,CAACd,MAAO,kBAAM,gCACjBe,GAAI,CAACf,MAAO,kBAAM,kCA9CG,cAjFA,EAkIH,CAClBK,EAAG,CAACL,MAAO,kBAAM,gCACjBM,EAAG,CAACN,MAAO,kBAAM,gCACjBO,EAAG,CAACP,MAAO,kBAAM,gCACjBQ,EAAG,CAACR,MAAO,kBAAM,gCACjBS,EAAG,CAACT,MAAO,kBAAM,gCACjBU,EAAG,CAACV,MAAO,kBAAM,iCACjBa,EAAG,CAACb,MAAO,kBAAM,iCACjBc,EAAG,CAACd,MAAO,kBAAM,iCACjBe,GAAI,CAACf,MAAO,kBAAM,iCAClBgB,GAAI,CAAChB,MAAO,kBAAM,iCAClBiB,GAAI,CAACjB,MAAO,kBAAM,iCAClBkB,GAAI,CAAClB,MAAO,kBAAM,mCA7DG,cAhFH,EAgJH,CACfK,EAAG,CAACL,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBC,OAC7FhB,EAAG,CAACN,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBE,OAC1FhB,EAAG,CAACP,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBC,OAChGd,EAAG,CAACR,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBE,OAChGd,EAAG,CAACT,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBG,OAChGZ,EAAG,CAAEZ,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBW,OAC3FnB,EAAG,CAACb,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBI,OAC7FX,EAAG,CAACd,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBK,OAC1FX,GAAI,CAACf,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBI,OACjGT,GAAI,CAAChB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBK,OACjGT,GAAI,CAACjB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBoB,SA3E5E,cA/EJ,EA6JH,CACdpC,EAAG,CAACL,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBM,OAC7FrB,EAAG,CAACN,MAAO,kBAAM,8BAAgDC,KAAMoB,EAAkBa,OACzF3B,EAAG,CAACP,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBM,OAChGnB,EAAG,CAACR,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBa,OAChGzB,EAAG,CAACT,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBqB,OAChG/B,EAAG,CAAEX,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBU,OAC3FnB,EAAG,CAAEZ,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBW,OAC3FnB,EAAG,CAACb,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBO,MAC7Fd,EAAG,CAACd,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBc,MAC1FpB,GAAI,CAACf,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBO,MACjGZ,GAAI,CAAChB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBc,MACjGlB,GAAI,CAACjB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBsB,QA1F5E,cA9EH,EA2KH,CACftC,EAAG,CAACL,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBQ,OAC7FvB,EAAG,CAACN,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBe,OAC1F7B,EAAG,CAACP,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBQ,OAChGrB,EAAG,CAACR,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBe,OAChG3B,EAAG,CAACT,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBuB,OAChG/B,EAAG,CAACb,MAAO,kBAAM,iCACjBe,GAAI,CAACf,MAAO,kBAAM,iCAClBgB,GAAI,CAAChB,MAAO,kBAAM,iCAClBiB,GAAI,CAACjB,MAAO,kBAAM,mCAtGG,cA7EH,EAsLH,CACfK,EAAI,CAACL,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBS,OAC9FxB,EAAI,CAACN,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBgB,OAC3F9B,EAAI,CAACP,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBS,OACjGtB,EAAI,CAACR,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBgB,OACjG5B,EAAI,CAACT,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBwB,OACjGhC,EAAI,CAACb,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBU,OAC9FjB,EAAI,CAACd,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBiB,OAC3FvB,GAAK,CAACf,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBU,OAClGf,GAAK,CAAChB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBiB,OAClGrB,GAAK,CAACjB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkByB,SAnH7E,cA5EH,EAkMH,CACfzC,EAAI,CAACL,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBW,OAC9F1B,EAAI,CAACN,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBkB,OAC3FhC,EAAI,CAACP,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBW,OACjGxB,EAAI,CAACR,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBkB,OACjG9B,EAAI,CAACT,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkB0B,OACjGlC,EAAI,CAACb,MAAO,kBAAM,8BAAoDC,KAAMoB,EAAkBY,OAC9FnB,EAAI,CAACd,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBmB,OAC3FzB,GAAK,CAACf,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBY,OAClGjB,GAAK,CAAChB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkBmB,OAClGvB,GAAK,CAACjB,MAAO,kBAAM,8BAAuDC,KAAMoB,EAAkB2B,SAhI7E,cA3EH,EA8MH,CACf3C,EAAG,CAACL,MAAO,kBAAM,iCACjBM,EAAG,CAACN,MAAO,kBAAM,iCACjBO,EAAG,CAACP,MAAO,kBAAM,iCACjBQ,EAAG,CAACR,MAAO,kBAAM,iCACjBS,EAAG,CAACT,MAAO,kBAAM,iCACjBW,EAAG,CAAEX,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBU,OAC3FlB,EAAG,CAACb,MAAO,kBAAM,iCACjBc,EAAG,CAACd,MAAO,kBAAM,iCACjBe,GAAI,CAACf,MAAO,kBAAM,iCAClBgB,GAAI,CAAChB,MAAO,kBAAM,iCAClBiB,GAAI,CAACjB,MAAO,kBAAM,mCA9IG,cA1EH,GA2NH,CACfK,EAAG,CAACL,MAAO,kBAAM,iCACjBM,EAAG,CAACN,MAAO,kBAAM,iCACjBO,EAAG,CAACP,MAAO,kBAAM,iCACjBQ,EAAG,CAACR,MAAO,kBAAM,iCACjBS,EAAG,CAACT,MAAO,kBAAM,iCACjBa,EAAG,CAACb,MAAO,kBAAM,iCACjBe,GAAI,CAACf,MAAO,kBAAM,iCAClBgB,GAAI,CAAChB,MAAO,kBAAM,iCAClBiB,GAAI,CAACjB,MAAO,kBAAM,mCA1JG,cAzEI,GAsOH,CACtBO,EAAG,CAACP,MAAO,kBAAM,8BAA+DC,KAAMoB,EAAkB4B,MACxGzC,EAAG,CAACR,MAAO,kBAAM,8BAA+DC,KAAMoB,EAAkB6B,MACxGzC,EAAG,CAACT,MAAO,kBAAM,8BAA+DC,KAAMoB,EAAkB8B,MACxGzC,EAAG,CAACV,MAAO,kBAAM,8BAA+DC,KAAMoB,EAAkB+B,MACxGxC,EAAG,CAAEZ,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBW,SAlKtE,cAxEL,GA6OH,CACb3B,EAAG,CAAEL,MAAO,kBAAM,iCAClBM,EAAG,CAAEN,MAAO,kBAAM,iCAClBO,EAAG,CAAEP,MAAO,kBAAM,iCAClBQ,EAAG,CAAER,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBO,MAC3FnB,EAAG,CAAET,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBQ,OAC3FlB,EAAG,CAAEX,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBU,OAC3FnB,EAAG,CAAEZ,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBW,OAC3FnB,EAAG,CAAEb,MAAO,kBAAM,iCAClBc,EAAG,CAAEd,MAAO,kBAAM,iCAClBe,GAAI,CAAEf,MAAO,kBAAM,mCA/KE,cAvED,GAyPH,CACjBK,EAAG,CAAEL,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBC,OAC3FhB,EAAG,CAAEN,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBI,OAC3FlB,EAAG,CAAEP,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBM,OAC3FnB,EAAG,CAAER,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBO,MAC3FnB,EAAG,CAAET,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBQ,OAC3FnB,EAAG,CAAEV,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBS,OAC3FnB,EAAG,CAAEX,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBU,OAC3FnB,EAAG,CAAEZ,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBW,OAC3FnB,EAAG,CAAEb,MAAO,kBAAM,6BAAiDC,KAAMoB,EAAkBY,OAC3FnB,EAAG,CAAEd,MAAO,kBAAM,mCA5LG,cAtED,GAqQH,CACjBK,EAAG,CAAEL,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBG,OAC3FlB,EAAG,CAAEN,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBoB,OAC3FlC,EAAG,CAAEP,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBqB,OAC3FlC,EAAG,CAAER,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBsB,MAC3FlC,EAAG,CAAET,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBuB,OAC3FlC,EAAG,CAAEV,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkBwB,OAC3FlC,EAAG,CAAEX,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkByB,OAC3FlC,EAAG,CAAEZ,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkB0B,OAC3FlC,EAAG,CAAEb,MAAO,kBAAM,8BAAiDC,KAAMoB,EAAkB2B,OAC3FlC,EAAG,CAAEd,MAAO,kBAAM,mCAzMG,I,iMC2CVsD,EADI,I,uIA7HLC,G,0EAEG,OAATA,E,yCACK,CAAEC,KAAM,O,WAGZC,EAAYF,EAAK7D,KAAKgE,MAAM,KAAKC,SAEpBxF,IAAgBC,I,gCACnB3D,KAAKmJ,SAASL,G,kDAGzBE,IAActF,IAAgBE,I,kCACnB5D,KAAKoJ,SAASN,G,oDAGzBE,IAActF,IAAgBG,I,kCACnB7D,KAAKqJ,SAASP,G,gLAItBA,GAEP,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAAC,GAQd,IAPA,IAAMC,EAASJ,EAAOjH,OAGlB7C,EAASmK,MAAMrG,KAAasG,KAAK,GAEjCC,EAAQH,EAAOZ,MAAM,KACrBrJ,EAAU,EACLqK,EAAI,EAAGA,EAAID,EAAM9I,OAAQ+I,IAAK,CACrC,IAAMC,EAAOF,EAAMC,GACnBtK,EAAOC,KAAauK,SAASD,EAAM,IAGrCX,EAAQ,CAAER,KAAMpJ,KAGlB8J,EAAOW,WAAWtB,GAClB,MAAOuB,GACPb,EAAO,CAAEa,gB,+BAKLvB,GACR,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAAC,GAOd,IANA,IAIIU,EAAGC,EAAIC,EAJLX,EAASJ,EAAOjH,OAChBiI,EAAY,IAAIC,UAAUb,GAE5BlK,EAASmK,MAAMrG,KAAasG,KAAK,GAG5BE,EAAI,EAAGA,EAAItK,EAAOuB,OAAS,EAAG+I,KACrCM,EAAKE,EAAc,EAAJR,IAEN,IACPM,EAAK,IAAMA,GAGbD,EAAIC,GAAM,GAEVC,EAAKC,EAAc,EAAJR,EAAQ,IAEd,IACPO,EAAK,IAAMA,GAGbF,GAAKE,EAEL7K,EAAOsK,GAAKK,EAGdf,EAAQ,CAAER,KAAMpJ,KAGlB8J,EAAOkB,kBAAkB7B,GACzB,MAAOuB,GACPb,EAAO,CAAEa,gB,+BAKLvB,GACR,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAAC,GAKd,IAJA,IAAMnF,EAAQgF,EAAOjH,OAAOyG,MAAM,MAE9B2B,EAAM,GAEDC,EAAQ,EAAGA,EAAQpG,EAAMvD,OAAQ2J,IAAS,CACjD,IAAMC,EAAUrG,EAAMoG,GAEtB,GAAuB,KAAnBC,EAAQC,OAAZ,CAIA,IAAMC,EAAaF,EAAQ7B,MAAM,KAEjC2B,EAAII,EAAW,GAAGD,QAAUC,EAAW,GAAGD,QAG5CxB,EAAQ,CAAER,KAAM6B,KAGlBnB,EAAOW,WAAWtB,GAClB,MAAOuB,GACPb,EAAO,CAAEa,kB,aCjHFY,EAFYC,IAAMC,cALV,CACrBC,MAAO,KACPC,SAAU,eCJCC,EAAa,aACbC,EAAmB,mBACnBC,EAAc,cACdC,EAAgB,gBAChBC,EAAc,cACdC,EAAmB,mBACnBC,EAAc,cACdC,EAAyB,yBACzBC,EAAkB,kBAClBC,EAAwB,wBCHtB,SAASC,IAAoB,IAAD,EACbC,qBAAWhB,GAA/BI,EADiC,EACjCA,SAAUD,EADuB,EACvBA,MADuB,EAEfc,mBAAS,IAFM,mBAElCC,EAFkC,KAE3BC,EAF2B,OAGTF,oBAAS,kBAAM,KAHN,mBAGlCG,EAHkC,KAGxBC,EAHwB,OAIPJ,oBAAS,kBAAM,KAJR,mBAIlCK,EAJkC,KAIvBC,EAJuB,OAKDN,oBAAS,kBAAM,KALd,mBAKlCO,EALkC,KAKpBC,EALoB,OAMYR,mBAAS,CAAES,gBAAgB,IANvC,mBAMlCC,EANkC,KAMbC,EANa,iDAiBzC,sBAAAvK,EAAA,wDACOiK,GAAcA,IAAcF,IAC/BnK,IAAU4K,OAAO1B,EAAMzL,OAAQyL,EAAM3G,MAAO2G,EAAMjJ,oBAGpDqK,GAAa,GACbF,GAAY,GANd,4CAjByC,sBAsGzC,OA/DAS,qBAAU,WAAM,4CACd,sCAAAzK,EAAA,0DACM6J,EAAMjL,OADZ,wBAEQ8L,EAAUb,EAAM,GAChBc,EAAU,KAEVd,EAAMjL,OAAS,IACjB8L,EAAUb,EAAM,GAAGlH,KAAK5C,SAAS,QAC7B8J,EAAM,GACNA,EAAM,GAEVc,EAAUd,EAAM,GAAGlH,KAAK5C,SAAS,QAC7B8J,EAAM,GACNA,EAAM,IAZhB,SAe2BtD,EAAWqE,MAAMF,GAf5C,mBAeYjE,EAfZ,EAeYA,KACRsC,EAAS,CAAE7F,KAAM8F,EAAY6B,QAASpE,KAElCkE,EAlBR,kCAmBsCpE,EAAWqE,MAAMD,GAnBvD,iBAmBoBG,EAnBpB,EAmBcrE,KACRsC,EAAS,CAAE7F,KAAMkG,EAAayB,QAASC,IApB7C,+EADc,uBAAC,WAAD,wBA4BdC,KACC,CAAClB,IAEJY,qBAAU,WAAM,4CACd,4BAAAzK,EAAA,yDACQ8I,EAAMkC,oBAAsBpL,IAAUd,QAAQmM,KAAMnC,EAAMoC,YAAYnL,SAASH,IAAUd,QAAQmM,KAAQd,EADjH,uBAEMpB,EAAS,CAAC7F,KAAMqG,EAAwBsB,QAASjL,IAAUd,QAAQmM,KACnEjB,GAAY,GAHlB,iCAOIjB,EAAS,CAAC7F,KAAMqG,EAAwBsB,QAAS,OAE3CM,EAAsBvL,IAAUwL,MAT1C,SAWUrC,EAAS,CAAE7F,KAAM8F,EAAY6B,QAASM,EAAoB9N,SAXpE,wBAYU0L,EAAS,CAAC7F,KAAMgG,EAAa2B,QAASM,EAAoBrM,UAZpE,YAcQqM,EAAoBE,oBAAoBzN,SAA+D,IAApDuN,EAAoBE,oBAAoBzN,QAdnG,kCAeYmL,EAAS,CAAE7F,KAAMiG,EAAe0B,QAASM,EAAoBE,sBAfzE,QAkBId,EAAsBY,GAElBhB,GACFC,GAAgB,GArBtB,6CADc,uBA2BTH,IAAcF,GAAYO,EAAoBD,gBAAoBF,GAAgBG,EAAoBD,iBA3B5F,WAAD,wBA4BZe,KAED,CAACnB,EAAWF,EAAUO,EAAqBH,IAG5C,6BACE,2BACEjH,KAAK,OACLoI,GAAG,SACHC,OAAO,YACP5I,KAAK,SACL6I,SArGN,SAA0BC,GACxB,IAEMC,EAFYD,EAAME,cAEI9B,MAE5BC,EAAS4B,GACTA,EAAU9M,OAAS,GAAKmK,EAAS,CAAE7F,KAAMmG,EAAkBwB,SAAS,KAgGhEe,UAAU,IAEZ,4BAAQC,UAAU,YAAYC,QAhHO,2CAgHeC,UAAWlC,EAAMjL,QAArE,WACA,4BAAQiN,UAAU,YAAYC,QAvFlC,WACE9B,GAAY,IAsFyC+B,UAAWlC,EAAMjL,QAApE,UACA,4BAAQiN,UAAU,YAAYC,QApFlC,WACE1B,GAAgB,IAmFyC2B,UAAWlC,EAAMjL,QAAxE,eACA,4BAAQiN,UAAU,YAAYC,QAjFlC,WACE/C,EAAS,CAAE7F,KAAMoG,EAAauB,QAAS/B,EAAMkD,MAAQ,IACrD9B,GAAa,IA+EyC6B,UAAWlC,EAAMjL,QAArE,Y,uBCjHOqN,EAAQ,QAGRrK,GAAM,mBAVP,MAWH,WADU,cAJE,QAMV,WAFQ,cAGhBqK,EAAQ,WAHQ,cATL,QAaH,WAJQ,cARN,OAaH,WALS,cAPN,OAaH,WANS,cANJ,SAaH,WAPO,cALA,aAaH,WARG,GAcNC,GAAa,mBAFV,EAGH,CACT5I,EAAG1B,EAAOqK,GACV1I,EAAG3B,EAAM,IACT4B,EAAG5B,EAAM,MACT6B,EAAG7B,EAAM,OACT8B,EAAG9B,EAAM,KACT+B,EAAG/B,EAAM,KACTgC,EAAGhC,EAAM,WACTiC,EAAGjC,EAAM,QATa,cAHV,EAcH,CACT0B,EAAG1B,EAAM,MACT2B,EAAG3B,EAAM,WACT4B,EAAG5B,EAAM,KACT6B,EAAG7B,EAAM,KACT8B,EAAG9B,EAAM,OACT+B,EAAG/B,EAAM,MACTgC,EAAGhC,EAAM,IACTiC,EAAGjC,EAAOqK,KAnBY,G,yjBCnB1B,IAAME,EAA0B,eAC7B3K,IAAaC,MAGhB,SAA6B7D,GAE3B,IAAMwO,EAAkBC,EAAyC,QAAxBzO,GAAW,GAAM,IACrD0O,EAAkBD,EAA+B,EAAhBzO,GAAW,GAEjD,MAAO,CACLoD,MAA4B,KAAV,IAAVpD,GAAwB2O,OAAOC,aAAuB,IAAV5O,GAAkB,IACtEwO,kBACAE,sBAIJ,SAASD,EAAazO,GAA0B,IAAjB6O,IAAgB,yDACvCC,EAAuB,EAAV9O,EAEnB,IACE,OAAOsO,EAAcO,EAAU,EAAI,GAAGC,GACtC,MAAO3E,GACP,OAAOnG,EAAOqK,IAIH,SAASU,IAAkB,MAGZ/C,mBAAS,IAHG,mBAGjCgD,EAHiC,KAGzBC,EAHyB,OAIZlD,qBAAWhB,GAArBG,GAJsB,EAIhCC,SAJgC,EAItBD,OAwClB,OAtCA2B,qBAAU,WAyBN3B,EAAMgE,eAxBR,WACE,IAAMC,EAA4BZ,EAA2BrD,EAAMkE,YAAYlE,EAAMgE,cAAclP,SAC7F2K,EAAQqE,EAAOK,WAAU,SAACzE,GAAD,OAAaA,EAAQlL,UAAYwL,EAAMgE,cAAcxP,WAGlFuP,GADa,IAAXtE,EACQ,sBACLqE,EAAOM,MAAM,EAAG3E,IADX,IAGNjL,QAASwL,EAAMgE,cAAcxP,SAC1ByP,IAJG,YAMLH,EAAOM,MAAM3E,EAAQ,KACxB4E,MAAK,SAACnN,EAAGC,GAAJ,OAAUD,EAAIC,KAEX,sBACL2M,GADK,IAGNtP,QAASwL,EAAMgE,cAAcxP,SAC1ByP,KAELI,MAAK,SAACC,EAAcC,GAAf,OAAiCD,EAAa9P,QAAU+P,EAAc/P,YAIxDgQ,KACxB,CAACxE,EAAMgE,gBAGVrC,qBAAU,WAEJ3B,EAAMkD,OACRa,EAAU,MAEX,CAAC/D,EAAMkD,QAKR,yBAAKH,UAAU,UACVe,EAAOtE,KAAI,SAACE,EAASD,GAAV,OACV,0BACEgF,IAAKhF,EACLsD,UAAU,iBACV2B,MAAO,CACLC,MAAOjF,EAAQ4D,gBACfE,gBAAiB9D,EAAQ8D,kBAG1B9D,EAAQxH,WCpFrB,IAAM0M,EAAoB,CAAC,KACrBC,EAAmB,CACvBtN,EAAG,QAGU,SAASuN,IAA+B,IAC7C9E,EAAUa,qBAAWhB,GAArBG,MAcR,OACE,yBAAK+C,UAAU,kCACZgC,OAAOC,KAAKhF,EAAMhK,SAASwJ,KAAI,SAACyF,EAAYxF,GAAb,OAC9B,yBAAKgF,IAAKhF,EAAOsD,UAAU,iCACzB,kCAhBR,SAAmBkC,GACjB,OAAQJ,EAAiBlP,eAAesP,GAAcJ,EAAiBI,GAAcA,GAAYC,cAenFC,CAASF,GAAjB,KACA,kCAbR,SAA8BA,GAC5B,OAAIL,EAAkB3N,SAASgO,GACtBjF,EAAMhK,QAAQiP,GAAYpP,SAAS,GAGrCmK,EAAMhK,QAAQiP,GAAYpP,SAAS,IAQ5BuP,CAAqBH,GAA7B,UC1BK,SAASI,IACtB,OAAO,4C,oBCAM,SAASC,EAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUd,EAAiB,EAAjBA,MAAOnQ,EAAU,EAAVA,OAC7DO,EAAU,KAEd,GAAoB,IAAhByQ,EACFzQ,EAAW,EAAI0Q,EAAY,MACtB,CACL,IAAM/F,EAAS,EAAI+F,EAAY,EAAID,EACnCzQ,EAAUP,EAAOuB,OAAS2J,EAASlL,EAAOkL,GAAS,EAGrD,OACE,yBAAKiF,MAAOA,GACT9O,YAAmBd,ICV1B,IAAM2Q,EAAe,CAAC,UAAW,MAAO,MAAO,MAAO,OAEvC,SAASC,IAAmB,IAAD,EACZ7E,qBAAWhB,GAArBG,GADsB,EAChCC,SADgC,EACtBD,OAElB,OAAO,6BACL,wBAAI0E,MAAO,CACTiB,UAAW,WADb,UAGA,6BACA,yBACEjB,MAAO,CACLkB,OAAQ,GACRC,MAAO,IACPC,QAAS,OACTC,aAAc,oBAGfN,EAAajG,KAAI,SAACwG,EAAQvG,GAAT,OAChB,0BACEgF,IAAKhF,EACLiF,MAAO,CACLmB,MAAO,KAGRG,OAKP,kBAAC,IAAD,CACEC,YAAa,EACbC,YAAa,GACbN,OAAQ,IACRO,SAAU,IACVC,UAAW,GACXP,MAAO,MAEN,SAACQ,GAAD,OAAe,kBAACf,EAAD,eAAY/Q,OAAQyL,EAAMzL,QAAY8R,S,slBCvC7C,SAASC,GAAT,GASX,IARFvP,EAQC,EARDA,mBACA4G,EAOC,EAPDA,KACA8B,EAMC,EANDA,MACA0C,EAKC,EALDA,GACAuC,EAIC,EAJDA,MACA6B,EAGC,EAHDA,oBAGC,IAFDC,qBAEC,aADDC,2BACC,SACK5P,EAAcE,EAAmB4G,EAAK8B,IAkB5C,OACE,yBACAiF,MAAK,GACHkB,OAAQ,GACRC,MAAO,IACPC,QAAS,OACTY,WArBED,EACK3N,IAAOK,aAGTtC,EAAYrC,UAAY2N,EAAKrJ,IAAOE,UAAY,UAkBrD2L,MAdE8B,EACK3N,IAAOI,QAGTrC,EAAYrC,UAAY2N,EAAKrJ,IAAOI,QAAU,WAWhDwL,IAGH,0BACEA,MAAO,CACLmB,MAAO,KAEP,2BACEzL,KAAK,WACLuM,QAASH,EACTtO,MAAOrB,EAAYrC,QACnBkO,SAAU6D,KAGhB,0BACI7B,MAAO,CACLmB,MAAO,MAGPhP,EAAY5B,SAEhB,0BACEyP,MAAO,CACLmB,MAAO,MAGNhP,EAAY/B,SAEjB,0BACE4P,MAAO,CACLmB,MAAO,MAGPhP,EAAYxB,YCjExB,IAAMuR,GAAa,CACjB,CACEC,UAAU,EACVC,MAAO,WAET,CACED,UAAU,EACVC,MAAO,WAET,CACED,UAAU,EACVC,MAAO,cAKI,SAASC,KAAyB,IAAD,EAClBlG,qBAAWhB,GAA/BI,EADsC,EACtCA,SAAUD,EAD4B,EAC5BA,MAD4B,EAGEc,mBAAS,GAHX,mBAGvCkG,EAHuC,KAGrBC,EAHqB,OAIcnG,oBAAS,GAJvB,mBAIvCoG,EAJuC,KAIfC,EAJe,KAMxCC,EAAQC,iBAAO,MAyCrB,OAnCA1F,qBAAU,WAAM,4CACd,4BAAAzK,EAAA,2DACO8I,EAAMsH,gBAAkBvC,OAAOC,KAAKhF,EAAMrL,aAAamB,SAAYkK,EAAMsH,gBADhF,gCAEkC/M,IAAUuH,MAAM9B,EAAMzL,OAAQyL,EAAMrL,aAFtE,OAEU4S,EAFV,OAIItH,EAAS,CAAE7F,KAAM+F,EAAkB4B,QAASwF,IAJhD,4CADc,sBASVvH,EAAMzL,OAAOuB,OAAS,GATX,WAAD,wBAUZ0R,KAGD,CAACxH,EAAMzL,OAAQyL,EAAMrL,cAExBgN,qBAAU,WACJuF,IAA2BlH,EAAMhK,QAAQmM,GAAK,EAAI6E,EAAmB,GAAKhH,EAAMhK,QAAQmM,GAAK,EAAI6E,EAAmB,KACtHC,EAAoBjH,EAAMhK,QAAQmM,GAAM,EAAI,GAC5CiF,EAAMK,QAAQC,aAAa1H,EAAMhK,QAAQmM,GAAK,EAAI,MAEnD,CAACnC,EAAMhK,QAAQmM,KAElBR,qBAAU,WACJuF,IACFD,EAAoBD,EAAoB,GACxCI,EAAMK,QAAQC,aAAaV,EAAmB,OAE/C,CAACE,IAEJvF,qBAAU,WACLoD,OAAOC,KAAKhF,EAAMjJ,oBAAoBjB,SACvCmR,EAAoB,OACpBG,EAAMK,QAAQC,aAAa,UAE5B,CAAC1H,EAAMjJ,qBAEN,6BACE,yBAAKgM,UAAU,uBACb,4BAAQA,UAAU,YAAYC,QAAS,WACrCmE,GAA0B,SAACQ,GAAD,OAAgBA,OAEzCT,EAAyB,OAAS,OAHrC,iBAKA,4BAAQnE,UAAU,YAAYC,QAAS,WACrC/C,EAAS,CAAE7F,KAAMuG,MADnB,0BAMDuG,GACC,yBACExC,MAAO,CACLkB,OAAQ,GACRC,MAAO,IACPC,QAAS,SAGVc,GAAWpH,KAAI,SAACwG,EAAQvG,GAAT,OACd,0BACEgF,IAAKhF,EACLiF,MAAO,CACLmB,MAAO,MAGRG,EAAOc,WAMfI,GAA0BnC,OAAOC,KAAKhF,EAAMjJ,qBAC7C,kBAAC,IAAD,CACE6Q,IAAKR,EACLS,SAAU9C,OAAOC,KAAKhF,EAAMjJ,oBAC5B+Q,UAAW/C,OAAOC,KAAKhF,EAAMjJ,oBAAoBjB,OACjD8P,OAAQ,IACRmC,SAAU,GACVC,cAAe,GACfnC,MAAO,IACPnB,MAAO,CACPuD,OAAO,GAAD,OAAKnP,IAAOC,QAAZ,cACNmP,aAAc,GAEdC,QAAS,SAAC1I,EAAO9B,GAAW,OAAOA,EAAK8B,MAEzC,gBAAGA,EAAH,EAAGA,MAAO9B,EAAV,EAAUA,KAAM+G,EAAhB,EAAgBA,MAAhB,OACC,kBAAC4B,GAAD,CACE7G,MAAOA,EACP9B,KAAMA,EACN+G,MAAOA,EACP3N,mBAAoBiJ,EAAMjJ,mBAC1BoL,GAAInC,EAAMhK,QAAQmM,GAClBqE,cAAexG,EAAMoC,YAAYnL,SAAS+I,EAAMjJ,mBAAmB4G,EAAK8B,IAAQjL,SAChF+R,oBAAqB,kBAjGI/R,EAiG2BwL,EAAMjJ,mBAAmB4G,EAAK8B,IAAQjL,aAhGlGyL,EAAS,CAAC7F,KAAMsG,EAAiBqB,QAASvN,IAD5C,IAAmCA,GAkGzBiS,oBAAqBzG,EAAMkC,oBAAsBlC,EAAMjJ,mBAAmB4G,EAAK8B,IAAQjL,SAAWwL,EAAMjJ,mBAAmB4G,EAAK8B,IAAQjL,UAAYwL,EAAMhK,QAAQmM,SCzH/J,SAASiG,KAAY,IAAD,EAEiBtH,oBAAS,GAF1B,mBAE1BuH,EAF0B,KAEPC,EAFO,OAGyBxH,oBAAS,GAHlC,mBAG1ByH,EAH0B,KAGHC,EAHG,KAMjC,OACE,6BACE,6CACA,yBAAKzF,UAAU,wBACb,yBAAKA,UAAU,kCACb,kBAACnC,EAAD,MACA,kBAACiD,EAAD,OAEF,yBAAKd,UAAU,sBACb,kBAAC+B,EAAD,MACA,kBAACiC,GAAD,MACA,yBAAKhE,UAAU,wBACb,4BAAQA,UAAU,YAAYC,QAAS,kBAAMwF,GAAyB,KAAtE,eACA,4BAAQzF,UAAU,YAAYC,QAAS,kBAAMsF,GAAqB,KAAlE,aAIN,kBAAC,IAAD,CACE5D,MAAO,CACL5P,QAAU,CACR2T,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,SAG5BC,aAAa,EACbC,OAAQR,EACRS,aAAa,gBACbC,2BAA2B,EAC3BC,kBAAkB,EAClBC,eAAgB,kBAAMX,GAAyB,KAE/C,kBAACnD,EAAD,OAGF,kBAAC,IAAD,CACEyD,aAAa,EACbpE,MAAO,CACL5P,QAAU,CACR2T,IAAK,MACLC,KAAM,OACNC,MAAO,OACPC,OAAQ,SAGZG,OAAQV,EACRW,aAAa,gBACbC,2BAA2B,EAC3BC,kBAAkB,EAClBC,eAAgB,kBAAMb,GAAqB,KAE3C,kBAAC5C,EAAD,Q,6jBCbD,I,GCnDM0D,GAAe,CAC1B7U,OAAQ,GACR8E,MAAO,GACPtC,mBAAoB,GACpBpC,YAAa,GACbqB,QAAS,CACPqT,GAAI,EACNC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACL/H,GAAI,EACJgI,GAAI,EACJC,EAAG,EACH7S,EAAG,GAEJyM,cAAe,KACfE,WAAYxL,IAAaC,KACzB2O,gBAAgB,EAChBpE,MAAO,EACPhB,kBAAmB,KACnBE,YAAa,IAGDiI,GAAU,SAASrK,EAAOsK,GACrC,IACE,OAAOC,GAAeD,EAAOlQ,MAAM4F,EAAOsK,EAAOvI,SACjD,MAAO9C,GAEP,OADAuL,MAAM,qCACCxK,IAILuK,IAAc,qBACjBE,GD/CI,SAA6B9C,EAAW5F,GAC7C,OAAO,MACF4F,EADL,CAEEpT,OAAQwN,OC2CQ,eAEjB0I,GDzCI,SACL9C,EADK,GAIL,OAAO,MACFA,EADL,CAEEtO,MAHF,EADEA,MAKAtC,mBAJF,EADSA,wBCqCS,eAGlB0T,GD/BK,SAA8B9C,EAAW3R,GAC9C,OAAO,MACF2R,EADL,CAEE3R,QAAQ,MACH2R,EAAU3R,QADR,GAEFA,QCuBW,eAIlByU,GDvBK,SAAqC9C,EAAW3D,GACrD,OAAO,MACF2D,EADL,CAEE3D,cAAc,MAAMA,QCgBJ,eAKlByG,GDjBK,SAA8B9C,EAAW+C,GAC9C,OAAO,MACF/C,EADL,CAEEhT,YAAY,MAAM+V,QCSF,eAMlBD,GDXK,SAAuC9C,EAAWL,GACvD,OAAO,MACFK,EADL,CAEEL,sBCEgB,eAOlBmD,GDLK,SAA8B9C,EAAWzE,GAC9C,OAAO,MACFyE,EADL,CAEEzE,aCLgB,eAQlBuH,GDC4C,SAAC9C,EAAWgD,GACxD,OAAO,MACFhD,EADL,CAEEzF,kBAAmByI,OCZH,eASlBF,GDOqC,SAAC9C,EAAWiD,GACjD,IAAMC,EAAmBlD,EAAUvF,YAAY+B,WAAU,SAAC2G,GAAD,OAAwBA,IAAuBF,KAExG,OACS,MACFjD,GAFmB,IAAtBkD,EACF,CAEEzI,YAAY,GAAD,mBACNuF,EAAUvF,YAAYgC,MAAM,EAAGyG,IADzB,YAENlD,EAAUvF,YAAYgC,MAAMyG,EAAmB,MAKxD,CAEEzI,YAAY,GAAD,mBACNuF,EAAUvF,aADJ,CAETwI,SCjCc,eAUlBH,GD4B2C,SAAC9C,GAC5C,OAAO,MACFA,EADL,CAEEvF,YAAa,QCzCG,IC7BL2I,OAZf,WAAgB,IAAD,EACaC,qBAAWX,GAASjB,IADjC,mBACNpJ,EADM,KACCC,EADD,KAGb,OACE,6BACE,kBAAC,EAAmBgL,SAApB,CAA6B/S,MAAO,CAAE8H,QAAOC,aAC3C,kBAACmI,GAAD,SCCY8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,soBEgDblV,EAAY,I,WA/KjB,aAAe,oBACdlC,KAAKqX,MAAO,EACZrX,KAAKsX,cAAe,EACpBtX,KAAKuX,eAAgB,EAErBvX,KAAKwX,aAAe,EACpBxX,KAAKyX,qBAAuB,GAC5BzX,KAAK0X,sBAAwB,GAC7B1X,KAAK2X,OAAQ,EAEb3X,KAAKL,OAAS,GACdK,KAAKyE,MAAQ,GACbzE,KAAKmC,mBAAqB,GAE1BnC,KAAKoB,QAAU,GAEfpB,KAAK4X,SAAU,E,kDAIf,IAAIjK,GAGH3N,KAAKqX,MACLrX,KAAKsX,cACLtX,KAAKuX,gBAELvX,KAAK6X,aAGN,IAAM5V,EAAcjC,KAAKmC,mBAAmBzC,IAAYkC,IAAI5B,KAAKoB,QAAQmM,KAEzE,IACCI,EAAsB1L,EAAY6V,KAAK,CACtC1W,QAASpB,KAAKoB,QACdzB,OAAQK,KAAKL,SAEb,MAAO0K,GACRrK,KAAK4X,SAAU,EACfjT,QAAQC,IAAIyF,GAGb,MAAO,CACNsC,eAAgB3M,KAAK4X,QACrBxW,QAASpB,KAAKoB,QACdzB,OAAQK,KAAKL,OACbgO,oBAAoB,EAAD,GACfA,M,mCAML,KAAI3N,KAAKqX,MAA2C,IAAnCrX,KAAKL,OAAOK,KAAKwX,kBAK9BxX,KAAKsX,cAA+D,IAA/CtX,KAAKL,OAAOK,KAAKyX,qBAAuB,OAK7DzX,KAAKuX,eAAiE,IAAhDvX,KAAKL,OAAOK,KAAK0X,sBAAwB,IAcnE,GARA1X,KAAKoB,QAAQmU,IAAM,EACnBvV,KAAKL,OAAO4B,KAAKC,MAAM9B,IAAYkC,IAAI5B,KAAKoB,QAAQmU,IAAM,IAAMvV,KAAKoB,QAAQuB,EAG7E3C,KAAKoB,QAAQmU,IAAM,EACnBvV,KAAKL,OAAO4B,KAAKC,MAAM9B,IAAYkC,IAAI5B,KAAKoB,QAAQmU,IAAM,IAAMvV,KAAKoB,QAAQmM,IAAO,GACpFvN,KAAKL,OAAO4B,KAAKC,MAAM9B,IAAYkC,IAAI5B,KAAKoB,QAAQmU,GAAK,GAAK,IAAyB,MAAnBvV,KAAKoB,QAAQmM,GAE7EvN,KAAKqX,KAAM,CAEdrX,KAAKoB,QAAQmM,GAAMvN,KAAKwX,aAExB,IAAIvV,EAAc8V,IAAerT,eAAe1E,KAAKL,OAAQK,KAAKwX,cAClEvV,EAAYpB,aAEZb,KAAKyE,MAAMzE,KAAKwX,cAAgBvV,EAEhCA,EAAY8C,UAAY/E,KAAKwX,aAE7BxX,KAAKmC,mBAAmBnC,KAAKwX,cAAgBvV,EAE7CjC,KAAKqX,MAAO,OACN,GAAIrX,KAAKsX,aAAc,CAC7BtX,KAAKsX,cAAe,EAGpBtX,KAAKoB,QAAQmM,GAAMvN,KAAKyX,qBAExB,IAAIxV,EAAc8V,IAAerT,eAAe1E,KAAKL,OAAQK,KAAKyX,sBAClExV,EAAYpB,aAEZb,KAAKyE,MAAMzE,KAAKyX,sBAAuBxV,EAEvCA,EAAY8C,UAAY/E,KAAKyX,qBAE7BzX,KAAKmC,mBAAmBnC,KAAKyX,sBAAwBxV,OAC/C,GAAIjC,KAAKuX,cAAe,CAC9BvX,KAAKuX,eAAgB,EAGrBvX,KAAKoB,QAAQmM,GAAMvN,KAAK0X,sBAExB,IAAIzV,EAAc8V,IAAerT,eAAe1E,KAAKL,OAAQK,KAAK0X,uBAClEzV,EAAYpB,aAEZb,KAAKyE,MAAMzE,KAAK0X,uBAAyBzV,EAEzCA,EAAY8C,UAAY/E,KAAK0X,sBAE7B1X,KAAKmC,mBAAmBnC,KAAK0X,uBAAyBzV,K,6BAKtDjC,KAAK4X,SAAU,I,6BAchB5X,KAAK4X,SAAU,I,6BAGTjY,EAAQ8E,EAAOtC,GACrBnC,KAAKL,OAASA,EACdK,KAAKyE,MAAQA,EACbzE,KAAKmC,mBAAqBA,EAE1BnC,KAAKoB,QAAU,CACdqT,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACL/H,GAAI,MACJgI,GAAI,EACJC,EAAG,EACH7S,EAAG,K,sCAIWqV,EAAO1U,GACtBtD,KAAKoB,QAAL,KACIpB,KAAKoB,QADT,eAEE4W,EAAQ1U,Q,MAOGpB,Q","file":"static/js/main.a5226815.chunk.js","sourcesContent":["import { format as formatUtil } from 'util'\nimport { SHORT_NUMBER } from '@/constants/general'\nimport { REGISTER_VALUE_NAME_MAPPER } from '@/constants/registers'\nimport cpuEngine from '@/services/cpu/CpuEngine'\nimport { convertToHexNumber } from '@/utils/general'\n\nclass Instruction {\n\n  constructor (memory, address, source, destination, symbolTable) {\n    this.argumentLength = 2\n    this.content = ''\n    this.argument = null\n    this.symbolAddress = null\n    this.addrStr = null\n    this.source = null\n    this.destination = null\n    this.address = null\n    this.opcode = null\n    this.ssource = ''\n    this.sdestination = ''\n    this.assembler = ''\n\n    this.isJump = false\n    this.hasArgument = false\n\n    this.address = address\n    this.opcode = memory[address / 2]\n    this.source = source\n\t\tthis.destination = destination\n\t\tthis.ssource = REGISTER_VALUE_NAME_MAPPER[source]\n    this.sdestination = REGISTER_VALUE_NAME_MAPPER[destination]\n\n    this.setContent()\n\n    const symbols = symbolTable.hasOwnProperty(convertToHexNumber(address)) ? symbolTable[convertToHexNumber(address.toString(16))] : null\n\n\t\tif (symbols !== null && symbols.length > 0) {\n\t\t\tthis.symbolAddress = symbols\n\t\t\tthis.addrStr = formatUtil('%s (%s)', this.address.toString(16), symbols)\n\t\t} else {\n\t\t\tthis.addrStr = formatUtil('%s', this.address.toString(16))\n\t\t\tthis.symbolAddress = this.addrStr\n\t\t}\n  }\n\n  setContent () {\n    //TODO: CHeck `format`, potential bug\n    if (!this.hasArgument) {\n      this.content = formatUtil('%s', this.opcode.toString(16))\n      return\n    }\n\n\t\tif (this.argumentLength === 4) {\n      this.content = formatUtil('%s, %s', this.opcode.toString(16), this.argument.toString(16))\n      return\n    }\n\n\t\tif (this.argumentLength === 2) {\n      this.content = formatUtil('%s, %s', this.opcode.toString(16), this.argument.toString(16))\n    }\n  }\n\n  exec ({ context, memory }) {\n\t\tthrow Error('Execution of this instruction is not possible!')\n  }\n\n  setArgument32 (memory) {\n\t\tconst w1 = memory[Math.floor((this.address + 2) / 2)]\n\t\tconst w2 = memory[Math.floor((this.address + 4) / 2)]\n\t\tthis.argument = Instruction.fixInt(w1, w2)\n\t\tthis.hasArgument = true\n\t\tthis.argumentLength = 4\n  }\n\n  setArgument8 (memory) {\n    // TODO short\n\t\tconst w1 = memory[Math.floor((this.address + 2) / 2)];\n\t\tthis.argument = Instruction.fix8(w1);\n\t\tthis.hasArgument = true;\n\t\tthis.argumentLength = 2;\n\t}\n\n\tsetArgument (memory) {\n    // TODO short\n    const w1 = memory[Math.floor((this.address + 2) / 2)];\n\n\t\tthis.argument = Instruction.fix(w1);\n\t\tthis.hasArgument = true;\n\t\tthis.argumentLength = 2;\n\t}\n\n  setAssembler(format, symbolTable) {\n\t\tif (!this.hasArgument) {\n      this.assembler = format\n      return\n    }\n\n    const argumentSymbol = symbolTable.hasOwnProperty(convertToHexNumber(this.argument)) ? symbolTable[convertToHexNumber(this.argument)] : null\n\n    if (argumentSymbol && argumentSymbol.length) {\n      this.assembler = formatUtil(format, argumentSymbol)\n      return\n    }\n\n    this.assembler = formatUtil(format, this.argument.toString(16))\n  }\n\n  findLabel(l) {\n\t\tif (l.length === 1) {\n      return 0\n    }\n\n\t\tfor (let k = this.address; k >= 0xB000; k--) {\n      const instruction = cpuEngine.addressInstruction[k]\n\n\t\t\tif (instruction === null) {\n        continue\n      }\n\n      for (let j = 0; j < l.length; j++) {\n        const lbl = l[j]\n\n\t\t\t\tif (lbl.includes(instruction.symbolAddress)) {\n\t\t\t\t\treturn j\n\t\t\t\t}\n\t\t\t}\n    }\n\n\t\tfor (let k = this.address; k < 90000; k++) {\n\t\t\tconst instruction = cpuEngine.addressInstruction[k]\n\n      if (instruction === null) {\n        continue\n      }\n\n      for (let j = 0; j < l.length; j++) {\n        const lbl = l[j]\n\n\t\t\t\tif (lbl.includes(instruction.symbolAddress)) {\n\t\t\t\t\treturn j;\n\t\t\t\t}\n\t\t\t}\n    }\n\n\t\treturn -1\n  }\n\n  static markOverflow(a, b, result, context) {\n\t\tconst sa = Instruction.sign(a);\n\t\tconst sb = Instruction.sign(b);\n    const sr = Instruction.sign(result);\n\n\t\tif (sa == sb & sa != sr) {\n      context.f |= 0x4\n\t\t\treturn\n    }\n\n\t\tcontext.f &= 0xfffb;\n  }\n\n  //TODO: first parameter `long` -->> static markFlags(long res, int r, CpuContext ctx) {\n  static markFlags(result, r, context) {\n    // Z flag\n    context.f = r == 0 ?\n      context.f | 1 :\n      context.f & 0xfffe\n\n\t\t// P flag\n    context.f =  ((r < 0) || ((r & 0x80000000) == 1)) ?\n      context.f & 0xfff7 :\n      context.f | 0x8\n\n\t\t//TODO: long number `L` -->> if ((result & 0x100000000L) != 0) {\n\t\t// C flag\n    context.f = ((result & 0x100000000) != 0) ?\n      context.f | 2 :\n      context.f & 0xd\n\t}\n\n  static sign(a) {\n    return a & 0x80000000\n  }\n\n  static neg(arg) {\n    // TODO:  (int) ((0x100000000L - arg) & 0xffffffff); <<-- Conversion to int\n\t\treturn (0x100000000 - arg) & 0xffffffff\n\t}\n\n\tstatic push (memory, address, content) {\n\t\tconst w1 = (content >> 16)\n\t\tmemory[address] = w1\n\t\tconst w2 = (content & 0xFFFF)\n\t\tmemory[address + 1] = w2\n  }\n\n  static pop (memory, address) {\n    const c1 = memory[address]\n    const c2 = memory[address + 1]\n\n    return Instruction.fixInt(c1, c2)\n  }\n\n  static fixInt (w1, w2) {\n    const i1 = w1 >= 0 ? w1 : w1 & 0xFFFF\n\n    const i2 = w2 >= 0 ? w2 : w2 & 0xFFFF\n\n\t\treturn (i1 << 16) | i2\n  }\n\n  static fix8(w) {\n    // TODO: implement this\n    // return (byte) w;\n    return w & 0b11111111\n\t}\n\n  static fix (w) {\n    if (w < SHORT_NUMBER.MIN) {\n      return w & 0xFFFF\n    }\n\n    return w & 0xFFFFFFFF\n  }\n\n  static getMemContent(context, address, realAddress, memory) {\n\t\tif (realAddress & 0x80000000 != 0) {\n\t\t\tswitch (realAddress & 0x7FFFFFFF) {\n  \t\t\t//TODO: Do not have uart inside context, maybe not necessary\n  \t\t\tcase 64: return context.uart\n  \t\t\tcase 69: return (+(new Date()) >> 20)\n        default: return 0\n\t\t\t}\n    }\n\n    /**\n     * TODO: Short types\n     *\n     * short w1 = (short) (ctx.memory[addr]);\n     * short w2 = (short) (ctx.memory[addr + 1]);\n     */\n\t\tconst w1 = memory[address]\n    const w2 = memory[address + 1]\n\n\t\treturn Instruction.fixInt(w1, w2);\n\t}\n\n  // TODO: This might not work, check original method from JAVA FPGA\n  static setMemContent(memory, address, value, realAddress) {\n    if (value < SHORT_NUMBER.MIN || value > SHORT_NUMBER.MAX) {\n      /**\n       * TODO: cast to `short`\n       *  memory[address] = (short) (val >> 16);\n       *  memory[address + 1] = (short) (val & 0xFFFF);\n       *\n      */\n      memory[address] = value >> 16\n      memory[address + 1] = value & 0xFFFF\n      return\n    }\n\n    if (realAddress & 0x80000000 == 0) {\n      memory[address] = value\n      return\n    }\n\n      // TODO: -> Check if this is necessary\n\t\t\t// int r = realAddress & 0x7FFFFFFF;\n\t\t\t// switch (r) {\n\t\t\t// case 128:\n\t\t\t// \tif (val == 1)\n\t\t\t// \t\tctx.engine.main.fbViewer.setMode(FBViewer.GRAPHICS_MODE_320_240);\n\t\t\t// \telse if (val == 2)\n\t\t\t// \t\tctx.engine.main.fbViewer.setMode(FBViewer.GRAPHICS_MODE_640_480);\n\t\t\t// \telse\n\t\t\t// \t\tctx.engine.main.fbViewer.setMode(FBViewer.TEXT_MODE);\n\t\t\t// \tbreak;\n\t\t\t// case 130:\n\t\t\t// \tif (val == 1) {\n\t\t\t// \t\tctx.engine.main.fbViewer.setInverse(true);\n\t\t\t// \t\tctx.engine.main.fbViewer.reset();\n\t\t\t// \t} else {\n\t\t\t// \t\tctx.engine.main.fbViewer.setInverse(false);\n\t\t\t// \t\tctx.engine.main.fbViewer.reset();\n\t\t\t// \t}\n\t\t\t// \tbreak;\n\t\t\t// }\n\t}\n}\n\nexport default Instruction","export function convertToHexNumber(number) {\n  return `0x${number.toString(16)}`\n}","export const MEMORY_SIZE = 100000;\n\nexport const FILE_EXTENSIONS = {\n  ASM: 'asm',\n  BIN: 'bin',\n  SYM: 'sym'\n};\n\nexport const SHORT_NUMBER = {\n  MIN: -32768,\n  MAX: 32767\n}\n\nexport const OUTPUT_MODES = {\n  TEXT: 'text',\n  GRAPHICS_MODE_320_240: 'graphics_mode_320_240',\n  GRAPHICS_MODE_640_480: 'graphics_mode_640_480'\n}\n\nexport const COLORS = {\n  PRIMARY: '#4F87B8',\n  SECONDARY: '#F17300',\n  PRIMARY_LIGHT: '#81A4CD',\n  NEUTRAL: '#DBE4EE',\n  PRIMARY_DARK: '#054A91'\n}","import { INSTRUCTIONS } from '@/constants/instructions';\nimport Instruction from '@/services/instructions/Instruction'\n\nclass CpuParser {\n  async parse(memory, symbolTable) {\n    let address = 0;\n    let lines = [];\n    let addressInstruction = {};\n\n    while (address <= 100000) {\n      let instruction\n\n      try {\n        instruction = await CpuParser.getInstruction(address, memory, symbolTable);\n      } catch (e) {\n        console.log(e);\n      }\n\n      address += 2;\n      instruction.setContent();\n      const lineLength = lines.push(instruction);\n      instruction.tableLine = lineLength - 1;\n\n      //TODO: Maybe without hasArgument in instructions, argumentLength could be 0 at the beginning\n      if (instruction.hasArgument) {\n        address += instruction.argumentLength;\n      }\n\n      if (instruction.assembler !== 'nop') {\n        console.log(`${address}. INSTRUCTION -> ${instruction.assembler}  ----  ${instruction.constructor.name}`);\n      }\n\n      addressInstruction[instruction.address] = instruction;\n    }\n    console.log('DONE PARSING')\n\n    return {\n      lines,\n      addressInstruction\n    };\n  }\n\n  static async getInstruction(address, memory, symbolTable) {\n    const instructionRegister = memory[address / 2];\n    const group = (instructionRegister >> 4) & 0xf;\n    const source = (instructionRegister >> 12) & 0xf;\n    const destination = (instructionRegister >> 8) & 0xf;\n    let InstructionObject;\n\n    try {\n      InstructionObject = INSTRUCTIONS[instructionRegister & 0xf]\n\n      if (!InstructionObject.hasOwnProperty(group)) {\n        return new Instruction(memory, address , 0, 0, symbolTable)\n      }\n\n      InstructionObject = InstructionObject[group]\n    } catch (e) {\n      return new Instruction(memory, address , 0, 0, symbolTable)\n    }\n\n    const {class: InstructionClass, type = null} = InstructionObject\n\n    const classI = await InstructionClass()\n\n    if (!!type) {\n      return new classI.default(memory, address , source, destination, type, symbolTable);\n    }\n\n    return new classI.default(memory, address , source, destination, symbolTable);\n  }\n}\n\nconst cpuParser = new CpuParser();\nexport  {\n  cpuParser,\n  CpuParser as CpuParserClass\n};\n","export const REGISTER_VALUE_NAME_MAPPER = {\n  0: 'r0',\n  1: 'r1',\n  2: 'r2',\n  3: 'r3',\n  4: 'r4',\n  5: 'r5',\n  6: 'r6',\n  7: 'r7',\n  8: 'r8',\n  9: 'r9',\n  10: 'r10',\n  11: 'r11',\n  12: 'r12',\n  13: 'r13',\n  15: 'sp',\n  14: 'h',\n}\n","// NOP/MOV/IN/OUT/PUSH/POP/RET/IRET/HALT GROUP\nconst OTHERS_GROUP = 0;\n\nconst JUMP_GROUP = 1;\nconst CALL_GROUP = 2;\nconst LOAD_STORE_GROUP = 3;\nconst ADD_SUB_GROUP = 4;\nconst AND_OR_GROUP = 5;\nconst XOR_NEG_GROUP = 6;\nconst SHL_SHR_GROUP = 7;\nconst MUL_DIV_GROUP = 8;\nconst INC_DEC_GROUP = 9;\nconst CMP_INV_GROUP = 10;\nconst FLOATING_POINT_GROUP = 11;\nconst LD_ST_GROUP = 12;\nconst ALU_CMP_W_GROUP = 13;\nconst ALU_CMP_B_GROUP = 14;\n\nexport const INSTRUCTION_TYPES = {\n  ADD_W: 19,\n  ADD_S: 1,\n  ADD_B: 10,\n  SUB_W: 20,\n  SUB_S: 2,\n  AND_W: 21,\n  OR_W: 22,\n  XOR_W: 23,\n  SHL_W: 25,\n  SHR_W: 24,\n  MUL_W: 26,\n  DIV_W: 27,\n  AND_S: 3,\n  OR_S: 4,\n  XOR_S: 5,\n  SHL_S: 7,\n  SHR_S: 6,\n  MUL_S: 8,\n  DIV_S: 9,\n  SUB_B: 11,\n  AND_B: 12,\n  OR_B: 13,\n  XOR_B: 14,\n  SHL_B: 16,\n  SHR_B: 15,\n  MUL_B: 17,\n  DIV_B: 18,\n  FADD: 28,\n  FSUB: 29,\n  FMUL: 30,\n  FDIV: 31\n}\n\nexport const INSTRUCTIONS_TYPES_NAMES = {\n  [INSTRUCTION_TYPES.ADD_S]: \"add.s \",\n  [INSTRUCTION_TYPES.SUB_S]: \"sub.s \",\n  [INSTRUCTION_TYPES.AND_S]: \"and.s \",\n  [INSTRUCTION_TYPES.OR_S]: \"or.s \",\n  [INSTRUCTION_TYPES.XOR_S]: \"xor.s \",\n  [INSTRUCTION_TYPES.SHL_S]: \"shl.s \",\n  [INSTRUCTION_TYPES.SHR_S]: \"shr.s \",\n  [INSTRUCTION_TYPES.MUL_S]: \"mul.s \",\n  [INSTRUCTION_TYPES.DIV_S]: \"div.s \",\n  [INSTRUCTION_TYPES.ADD_B]: \"add.b \",\n  [INSTRUCTION_TYPES.SUB_B]: \"sub.b \",\n  [INSTRUCTION_TYPES.AND_B]: \"and.b \",\n  [INSTRUCTION_TYPES.OR_B]: \"or.b \",\n  [INSTRUCTION_TYPES.XOR_B]: \"xor.b \",\n  [INSTRUCTION_TYPES.SHL_B]: \"shl.b \",\n  [INSTRUCTION_TYPES.SHR_B]: \"shr.b \",\n  [INSTRUCTION_TYPES.MUL_B]: \"mul.b \",\n  [INSTRUCTION_TYPES.DIV_B]: \"div.b \",\n  [INSTRUCTION_TYPES.ADD_W]: \"add.w \",\n  [INSTRUCTION_TYPES.SUB_W]: \"sub.w \",\n  [INSTRUCTION_TYPES.AND_W]: \"and.w \",\n  [INSTRUCTION_TYPES.OR_W]: \"or.w \",\n  [INSTRUCTION_TYPES.XOR_W]: \"xor.w \",\n  [INSTRUCTION_TYPES.SHL_W]: \"shl.w \",\n  [INSTRUCTION_TYPES.SHR_W]: \"shr.w \",\n  [INSTRUCTION_TYPES.MUL_W]: \"mul.w \",\n  [INSTRUCTION_TYPES.DIV_W]: \"div.w \",\n  [INSTRUCTION_TYPES.FADD]: \"fadd \",\n  [INSTRUCTION_TYPES.FSUB]: \"fsub \",\n  [INSTRUCTION_TYPES.FMUL]: \"fmul \",\n  [INSTRUCTION_TYPES.FDIV]: \"fdiv \"\n}\n\nexport const INSTRUCTIONS = {\n  [OTHERS_GROUP]: {\n    0: {class: () => import('@/services/instructions/others/Nop') },\n    1: {class: () => import('@/services/instructions/others/MovWRegXRegY') },\n    2: {class: () => import('@/services/instructions/others/MovSRegXX') },\n    3: {class: () => import('@/services/instructions/others/InRegXX') },\n    4: {class: () => import('@/services/instructions/others/OutXXReg') },\n    5: {class: () => import('@/services/instructions/others/PushReg') },\n    6: {class: () => import('@/services/instructions/others/PushXX') },\n    7: {class: () => import('@/services/instructions/others/PopReg') },\n    8: {class: () => import('@/services/instructions/others/Ret') },\n    9: {class: () => import('@/services/instructions/others/IRet') },\n    10:{class: () => import( '@/services/instructions/others/SwapRegXRegY') },\n    11:{class: () => import( '@/services/instructions/others/MovWRegXX') },\n    12:{class: () => import( '@/services/instructions/others/Irq') },\n    13:{class: () => import( '@/services/instructions/others/MovBRegXX') },\n    14:{class: () => import( '@/services/instructions/others/MovWRegXRegYXX') },\n    15:{class: () => import( '@/services/instructions/others/Halt') }\n  },\n\n  [JUMP_GROUP]: {\n    0: {class: () => import('@/services/instructions/jmp/JXX')},\n    1: {class: () => import('@/services/instructions/jmp/JzXX')},\n    2: {class: () => import('@/services/instructions/jmp/JnzXX')},\n    3: {class: () => import('@/services/instructions/jmp/JcXX')},\n    4: {class: () => import('@/services/instructions/jmp/JncXX')},\n    5: {class: () => import('@/services/instructions/jmp/JoXX')},\n    6: {class: () => import('@/services/instructions/jmp/JnoXX')},\n    7: {class: () => import('@/services/instructions/jmp/JpXX')},\n    8: {class: () => import('@/services/instructions/jmp/JnpXX')},\n    9: {class: () => import('@/services/instructions/jmp/JgXX')},\n    10: {class: () => import('@/services/instructions/jmp/JseXX')},\n    15: {class : () => import('@/services/instructions/jmp/JrReg')}\n  },\n\n  [CALL_GROUP]: {\n    0: {class: () => import('@/services/instructions/call/CallXX')},\n    1: {class: () => import('@/services/instructions/call/CallZXX')},\n    2: {class: () => import('@/services/instructions/call/CallNzXX')},\n    3: {class: () => import('@/services/instructions/call/CallCXX')},\n    4: {class: () => import('@/services/instructions/call/CallNcXX')},\n    5: {class: () => import('@/services/instructions/call/CallOXX')},\n    6: {class: () => import('@/services/instructions/call/CallNoXX')},\n    7: {class: () => import('@/services/instructions/call/CallPXX')},\n    8: {class: () => import('@/services/instructions/call/CallNpXX')},\n    9: {class: () => import('@/services/instructions/call/CallGXX')},\n    10: {class: () => import('@/services/instructions/call/CallSeXX')}\n  },\n\n  [LOAD_STORE_GROUP]: {\n    0: {class: () => import('@/services/instructions/loadstore/LdSRegXMRegY')},\n    1: {class: () => import('@/services/instructions/loadstore/LdSRegMXX')},\n    2: {class: () => import('@/services/instructions/loadstore/LdSRegXMRegYXX')},\n    3: {class: () => import('@/services/instructions/loadstore/LdBRegXMRegY')},\n    4: {class: () => import('@/services/instructions/loadstore/LdBRegMXX')},\n    5: {class: () => import('@/services/instructions/loadstore/LdBRegXMRegYXX')},\n    8: {class: () => import('@/services/instructions/loadstore/StSMRegXRegY')},\n    9: {class: () => import('@/services/instructions/loadstore/StSMXXReg')},\n    10: {class: () => import('@/services/instructions/loadstore/StSMRegXXXRegY')},\n    11: {class: () => import('@/services/instructions/loadstore/StBMRegXRegY')},\n    12: {class: () => import('@/services/instructions/loadstore/StBMXXReg')},\n    13: {class: () => import('@/services/instructions/loadstore/StBMRegXXXRegY')}\n  },\n\n  [ADD_SUB_GROUP]: {\n    0: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.ADD_W},\n    1: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.ADD_S},\n    2: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.ADD_W},\n    3: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.ADD_S},\n    4: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.ADD_B},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.SUB_W},\n    9: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.SUB_S},\n    10: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.SUB_W},\n    11: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.SUB_S},\n    12: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.SUB_B}\n  },\n\n  [AND_OR_GROUP]: {\n    0: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.AND_W},\n    1: {class: () => import('@/services/instructions/alu/AluSRegXX'),type: INSTRUCTION_TYPES.AND_S},\n    2: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.AND_W},\n    3: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.AND_S},\n    4: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.AND_B},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.OR_W},\n    9: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.OR_S},\n    10: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.OR_W},\n    11: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.OR_S},\n    12: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.OR_B}\n  },\n\n  [XOR_NEG_GROUP]: {\n    0: {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.XOR_W},\n    1: {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.XOR_S},\n    2: {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.XOR_W},\n    3: {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.XOR_S},\n    4: {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.XOR_B},\n    8: {class: () => import('@/services/instructions/alu/NegWReg') },\n    10: {class: () => import('@/services/instructions/alu/NegWMreGXX') },\n    11: {class: () => import('@/services/instructions/alu/NegSMRegXX') },\n    12: {class: () => import('@/services/instructions/alu/NegBMRegXX') }\n  },\n\n  [SHL_SHR_GROUP]: {\n    0:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.SHL_W},\n    1:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.SHL_S},\n    2:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.SHL_W},\n    3:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.SHL_S},\n    4:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.SHL_B},\n    8:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.SHR_W},\n    9:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.SHR_S},\n    10:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.SHR_W},\n    11:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.SHR_S},\n    12:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.SHR_B}\n  },\n\n  [MUL_DIV_GROUP]: {\n    0:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.MUL_W },\n    1:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.MUL_S },\n    2:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.MUL_W },\n    3:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.MUL_S },\n    4:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.MUL_B },\n    8:  {class: () => import('@/services/instructions/alu/AluWRegXRegY'), type: INSTRUCTION_TYPES.DIV_W },\n    9:  {class: () => import('@/services/instructions/alu/AluSRegXX'), type: INSTRUCTION_TYPES.DIV_S },\n    10:  {class: () => import('@/services/instructions/alu/AluWRegXMRegYXX'), type: INSTRUCTION_TYPES.DIV_W },\n    11:  {class: () => import('@/services/instructions/alu/AluSRegXMRegYXX'), type: INSTRUCTION_TYPES.DIV_S },\n    12:  {class: () => import('@/services/instructions/alu/AluBRegXMRegYXX'), type: INSTRUCTION_TYPES.DIV_B }\n  },\n\n  [INC_DEC_GROUP]: {\n    0: {class: () => import('@/services/instructions/incdec/IncWReg')},\n    1: {class: () => import('@/services/instructions/incdec/IncSMReg')},\n    2: {class: () => import('@/services/instructions/incdec/IncWMRegXX')},\n    3: {class: () => import('@/services/instructions/incdec/IncSMRegXX')},\n    4: {class: () => import('@/services/instructions/incdec/IncBMRegXX')},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    8: {class: () => import('@/services/instructions/incdec/DecWReg')},\n    9: {class: () => import('@/services/instructions/incdec/DecSMReg')},\n    10: {class: () => import('@/services/instructions/incdec/DecWMRegXX')},\n    11: {class: () => import('@/services/instructions/incdec/DecSMRegXX')},\n    12: {class: () => import('@/services/instructions/incdec/DecBMRegXX')}\n  },\n\n  [CMP_INV_GROUP]: {\n    0: {class: () => import('@/services/instructions/cmpinv/CmpWRegXRegY')},\n    1: {class: () => import('@/services/instructions/cmpinv/CmpSRegXX')},\n    2: {class: () => import('@/services/instructions/cmpinv/CmpWRegXMRegYXX')},\n    3: {class: () => import('@/services/instructions/cmpinv/CmpSRegXMRegYXX')},\n    4: {class: () => import('@/services/instructions/cmpinv/CmpBRegXMRegYXX')},\n    8: {class: () => import('@/services/instructions/cmpinv/InvWReg')},\n    10: {class: () => import('@/services/instructions/cmpinv/InvWMRegXX')},\n    11: {class: () => import('@/services/instructions/cmpinv/InvSMRegXX')},\n    12: {class: () => import('@/services/instructions/cmpinv/InvBMRegXX')}\n  },\n\n  [FLOATING_POINT_GROUP]: {\n    2: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FADD },\n    3: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FSUB },\n    4: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FMUL },\n    5: {class: () => import('@/services/instructions/floatingpoint/FloatRegXRegY'), type: INSTRUCTION_TYPES.FDIV },\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W}\n  },\n\n  [LD_ST_GROUP]: {\n    0: { class: () => import('@/services/instructions/loadstore/LdWRegXMRegY') },\n    1: { class: () => import('@/services/instructions/loadstore/LdWRegMXX') },\n    2: { class: () => import('@/services/instructions/loadstore/LdWRegXMRegYXX') },\n    3: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.OR_W},\n    4: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.XOR_W},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: { class: () => import('@/services/instructions/loadstore/StWMRegXRegY') },\n    9: { class: () => import('@/services/instructions/loadstore/StWMXXReg') },\n    10: { class: () => import('@/services/instructions/loadstore/StWMRegXXXRegY') }\n  },\n\n  [ALU_CMP_W_GROUP]: {\n    0: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.ADD_W},\n    1: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SUB_W},\n    2: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.AND_W},\n    3: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.OR_W},\n    4: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.XOR_W},\n    5: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHL_W},\n    6: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.SHR_W},\n    7: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.MUL_W},\n    8: { class: () => import('@/services/instructions/alu/AluWRegXX'), type: INSTRUCTION_TYPES.DIV_W},\n    9: { class: () => import('@/services/instructions/cmpinv/CmpWRegXX')}\n  },\n\n  [ALU_CMP_B_GROUP]: {\n    0: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.ADD_B},\n    1: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.SUB_B},\n    2: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.AND_B},\n    3: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.OR_B},\n    4: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.XOR_B},\n    5: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.SHL_B},\n    6: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.SHR_B},\n    7: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.MUL_B},\n    8: { class: () => import('@/services/instructions/alu/AluBRegXX'), type: INSTRUCTION_TYPES.DIV_B},\n    9: { class: () => import('@/services/instructions/cmpinv/CmpBRegXX')}\n  }\n};\n","import { MEMORY_SIZE, FILE_EXTENSIONS } from '../../constants/general';\n\nclass FileParser {\n  async parse(file) {\n\n    if (file === null) {\n      return { data: null }\n    }\n\n   const extension = file.name.split('.').pop();\n\n    if (extension === FILE_EXTENSIONS.ASM) {\n      return await this.asmParse(file);\n    }\n\n    if (extension === FILE_EXTENSIONS.BIN) {\n      return await this.binParse(file)\n    }\n\n    if (extension === FILE_EXTENSIONS.SYM) {\n      return await this.symParse(file)\n    }\n  }\n\n  asmParse(file) {\n    // TODO Not working\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const buffer = reader.result;\n\n          //TODO: Check this, how it works\n          let memory = Array(MEMORY_SIZE).fill(0);\n\n          let words = buffer.split(' ');\n          let address = 0;\n          for (let i = 0; i < words.length; i++) {\n            const word = words[i];\n            memory[address++] = parseInt(word, 16);\n          }\n\n          resolve({ data: memory })\n        }\n\n        reader.readAsText(file);\n      } catch (error) {\n        reject({ error })\n      }\n    })\n  }\n\n  binParse (file) {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const buffer = reader.result;\n          const int32View = new Int8Array(buffer);\n\n          let memory = Array(MEMORY_SIZE).fill(0);\n          let t, t1, t2;\n\n          for (let i = 0; i < memory.length / 2; i++) {\n            t1 = int32View[i * 2];\n\n            if (t1 < 0) {\n              t1 = 256 + t1;\n            }\n\n            t = t1 << 8;\n\n            t2 = int32View[i * 2 + 1];\n\n            if (t2 < 0) {\n              t2 = 256 + t2;\n            }\n\n            t += t2;\n\n            memory[i] = t;\n          }\n\n          resolve({ data: memory })\n        };\n\n        reader.readAsArrayBuffer(file);\n      } catch (error) {\n        reject({ error })\n      }\n    })\n  }\n\n  symParse (file) {\n    return new Promise((resolve, reject) => {\n      try {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          const lines = reader.result.split('\\n')\n\n          let map = {}\n\n          for (let index = 0; index < lines.length; index++) {\n            const element = lines[index];\n\n            if (element.trim() === '') {\n              continue\n            }\n\n            const splitParts = element.split('=')\n\n            map[splitParts[1].trim()] = splitParts[0].trim()\n          }\n\n          resolve({ data: map })\n        };\n\n        reader.readAsText(file);\n      } catch (error) {\n        reject({ error })\n      }\n    })\n  }\n}\n\nconst fileParser = new FileParser();\nexport default fileParser;\n","import React from 'react';\n\nconst initialContext = {\n  state: null,\n  dispatch: () => {}\n};\n\nconst ApplicationContext = React.createContext(initialContext);\n\nexport default ApplicationContext;\n","export const SET_MEMORY = 'SET_MEMORY'\nexport const SET_INSTRUCTIONS = 'SET_INSTRUCTIONS'\nexport const SET_CONTEXT = 'SET_CONTEXT'\nexport const UPDATE_OUTPUT = 'UPDATE_OUTPUT'\nexport const SET_SYMBOLS = 'SET_SYMBOLS'\nexport const HAS_SYMBOL_TABLE = 'HAS_SYMBOL_TABLE'\nexport const RESET_STATE = 'RESET_STATE'\nexport const SET_CURRENT_BREAKPOINT = 'SET_CURRENT_BREAKPOINT'\nexport const SET_BREAKPOINTS = 'SET_BREAKPOINTS'\nexport const CLEAR_ALL_BREAKPOINTS = 'CLEAR_ALL_BREAKPOINTS'","import React, { useState, useEffect, useContext } from 'react';\nimport fileParser from '@/services/parsers/FileParser';\nimport cpuEngine from '@/services/cpu/CpuEngine';\nimport ApplicationContext from '@/context/Context';\nimport { SET_MEMORY, SET_CONTEXT, UPDATE_OUTPUT, SET_SYMBOLS, HAS_SYMBOL_TABLE, RESET_STATE, SET_CURRENT_BREAKPOINT } from '@/store/Actions';\n\nexport default function ControlComponent() {\n  const { dispatch, state } = useContext(ApplicationContext);\n  const [files, setFiles] = useState([]);\n  const [stopFlag, setStopFlag] = useState(() => false)\n  const [startFlag, setStartFlag] = useState(() => false)\n  const [stepOverFlag, setStepOverFlag] = useState(() => false)\n  const [engineProcessedData, setEngineResponseData] = useState({ shouldRunAgain: true })\n\n  function handleUploadFile(input) {\n    const fileInput = input.currentTarget;\n\n    const loadFiles = fileInput.files;\n\n    setFiles(loadFiles);\n    loadFiles.length > 1 && dispatch({ type: HAS_SYMBOL_TABLE, payload: true })\n  }\n\n  async function handleStart() {\n    if (!startFlag || (startFlag && !stopFlag)) {\n      cpuEngine.inject(state.memory, state.lines, state.addressInstruction)\n    }\n\n    setStartFlag(true)\n    setStopFlag(false)\n  }\n\n  function handleStop () {\n    setStopFlag(true)\n  }\n\n  function handleStepOver () {\n    setStepOverFlag(true)\n  }\n\n  function handleReset () {\n    dispatch({ type: RESET_STATE, payload: state.reset + 1 })\n    setStartFlag(false)\n  }\n\n  useEffect(() => {\n    async function parseFile() {\n      if (files.length) {\n        let binFile = files[0]\n        let symFile = null\n\n        if (files.length > 1) {\n          binFile = files[0].name.includes('.bin')\n            ? files[0]\n            : files[1]\n\n          symFile = files[0].name.includes('.sym')\n            ? files[0]\n            : files[1]\n        }\n\n        const { data } = await fileParser.parse(binFile);\n        dispatch({ type: SET_MEMORY, payload: data });\n\n        if (symFile) {\n          const { data: symData } = await fileParser.parse(symFile)\n          dispatch({ type: SET_SYMBOLS, payload: symData})\n        }\n\n        return\n      }\n    }\n\n    parseFile();\n  }, [files]);\n\n  useEffect(() => {\n    async function run() {\n        if (state.currentBreakpoint !== cpuEngine.context.pc && state.breakpoints.includes(cpuEngine.context.pc) && !stepOverFlag) {\n          dispatch({type: SET_CURRENT_BREAKPOINT, payload: cpuEngine.context.pc})\n          setStopFlag(true)\n          return\n        }\n\n        dispatch({type: SET_CURRENT_BREAKPOINT, payload: null})\n\n        const processedEngineData = cpuEngine.run()\n\n        await dispatch({ type: SET_MEMORY, payload: processedEngineData.memory})\n        await dispatch({type: SET_CONTEXT, payload: processedEngineData.context})\n\n        if (processedEngineData.instructionResponse.content || processedEngineData.instructionResponse.content === 0) {\n          await dispatch({ type: UPDATE_OUTPUT, payload: processedEngineData.instructionResponse })\n        }\n\n        setEngineResponseData(processedEngineData)\n\n        if (stepOverFlag) {\n          setStepOverFlag(false)\n        }\n    }\n\n\n    if ((startFlag && !stopFlag && engineProcessedData.shouldRunAgain) || (stepOverFlag && engineProcessedData.shouldRunAgain)) {\n      run()\n    }\n  }, [startFlag, stopFlag, engineProcessedData, stepOverFlag])\n\n  return (\n    <div>\n      <input\n        type='file'\n        id='avatar'\n        accept=\".bin,.sym\"\n        name='avatar'\n        onChange={handleUploadFile}\n        multiple={true}\n      />\n      <button className=\"my-button\" onClick={handleStart} disabled={!files.length}> Start </button>\n      <button className=\"my-button\" onClick={handleStop} disabled={!files.length}> Stop </button>\n      <button className=\"my-button\" onClick={handleStepOver} disabled={!files.length}> Step over </button>\n      <button className=\"my-button\" onClick={handleReset} disabled={!files.length}> Reset </button>\n    </div>\n  );\n        }","\nconst RED = 'red'\nconst GREEN = 'green'\nconst BLUE = 'blue'\nconst PINK = 'pink'\nconst YELLOW = 'yellow'\nconst LIGHT_BLUE = 'light_blue'\nexport const WHITE = 'white'\nexport const BLACK = 'black'\n\n\nexport const COLORS = {\n  [RED]: '#ff0000',\n  [WHITE]: '#ffffff',\n  [BLACK]: '#000000',\n  [GREEN]: '#33cc33',\n  [BLUE]: '#0000ff',\n  [PINK]: '#ff99ff',\n  [YELLOW]: '#ffff00',\n  [LIGHT_BLUE]: '#00ffff',\n}\n\nconst INVERSE = 1\nconst REGULAR = 0\n\nexport const COLORS_MAPPER = {\n  [REGULAR]: {\n    0: COLORS[BLACK],\n    1: COLORS[RED],\n    2: COLORS[GREEN],\n    3: COLORS[YELLOW],\n    4: COLORS[BLUE],\n    5: COLORS[PINK],\n    6: COLORS[LIGHT_BLUE],\n    7: COLORS[WHITE]\n  },\n  [INVERSE]: {\n    0: COLORS[WHITE],\n    1: COLORS[LIGHT_BLUE],\n    2: COLORS[PINK],\n    3: COLORS[BLUE],\n    4: COLORS[YELLOW],\n    5: COLORS[GREEN],\n    6: COLORS[RED],\n    7: COLORS[BLACK]\n  }\n}","import React, {useState, useEffect, useContext} from \"react\"\nimport ApplicationContext from '@/context/Context'\nimport { OUTPUT_MODES } from '@/constants/general'\nimport { COLORS_MAPPER, COLORS, BLACK, WHITE} from '@/constants/output'\n\n\nconst MAPPER_FUNCTION_FOR_OUTPUT = {\n  [OUTPUT_MODES.TEXT]: calculateResultText\n}\n\nfunction calculateResultText(content) {\n\n  const foregroundColor = getTextColor((~((content >> 12) & 7))  & 0xffff);\n\tconst backgroundColor = getTextColor(((content >> 8) & 7)  & 0xffff);\n\n  return {\n    value: (content & 0xff) !== 0 ? String.fromCharCode(content & 0xff) : \" \",\n    foregroundColor,\n    backgroundColor\n  }\n}\n\nfunction getTextColor(content, inverse = true) {\n  const groupColor = content & 7\n\n  try {\n    return COLORS_MAPPER[inverse ? 1 : 0][groupColor]\n  } catch (error) {\n    return COLORS[BLACK]\n  }\n}\n\nexport default function OutputComponent() {\n  // Array.apply is meant to be used for some kind of optimization but doesn't work as expected.\n  // It slows down the process even more, especially because number of elements are greater then 10000\n  const [output, setOutput] = useState([])\n  const { dispatch, state } = useContext(ApplicationContext);\n\n  useEffect(() => {\n    function updateOutput() {\n      const calculatedValueWithColors = MAPPER_FUNCTION_FOR_OUTPUT[state.outputMode](state.outputPayload.content)\n      const index = output.findIndex((element) => element.address === state.outputPayload.address)\n\n      if (index !== -1) {\n        setOutput([\n          ...output.slice(0, index),\n          {\n            address: state.outputPayload.address,\n            ...calculatedValueWithColors\n          },\n          ...output.slice(index + 1)\n        ].sort((a, b) => a - b))\n      } else {\n        setOutput([\n          ...output,\n          {\n            address: state.outputPayload.address,\n            ...calculatedValueWithColors\n          }\n        ].sort((firstElement, secondElement) => firstElement.address - secondElement.address))\n      }\n    }\n\n    !!state.outputPayload && updateOutput()\n  }, [state.outputPayload])\n\n\n  useEffect(() => {\n\n    if (state.reset) {\n      setOutput([])\n    }\n  }, [state.reset])\n\n\n\n  return (\n    <div className=\"output\">\n        {output.map((element, index) =>\n          <span\n            key={index}\n            className=\"letter-spacing\"\n            style={{\n              color: element.foregroundColor,\n              backgroundColor: element.backgroundColor\n            }}\n          >\n            {element.value}\n          </span>\n        )}\n    </div>\n  )\n}\n","import React, {useState, useEffect, useContext} from \"react\"\nimport ApplicationContext from '@/context/Context'\n\nconst BINARY_CONVERSION = ['f']\nconst LABELS_FOR_FLAGS = {\n  f: 'POCZ'\n}\n\nexport default function RegistersAndFlagsComponent () {\n  const { state } = useContext(ApplicationContext);\n\n  function getLabel (contextKey) {\n    return (LABELS_FOR_FLAGS.hasOwnProperty(contextKey) ? LABELS_FOR_FLAGS[contextKey] : contextKey).toUpperCase()\n  }\n\n  function getValueOfContextKey(contextKey) {\n    if (BINARY_CONVERSION.includes(contextKey)) {\n      return state.context[contextKey].toString(2)\n    }\n\n    return state.context[contextKey].toString(16)\n  }\n\n  return (\n    <div className='horizontal-alignment flex-wrap'>\n      {Object.keys(state.context).map((contextKey, index) => (\n        <div key={index} className=\"vertical-alignment flag-style\">\n          <span> {getLabel(contextKey)} </span>\n          <span> {getValueOfContextKey(contextKey)} </span>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport default function StackFrameComponent() {\n  return <div>STCK FRAMEE</div>\n}\n","import React from 'react'\nimport { convertToHexNumber } from '@/utils/general'\n\nexport default function MemoryCell({ columnIndex, rowIndex, style, memory }) {\n  let content = null\n\n  if (columnIndex === 0) {\n    content = (4 * rowIndex) * 2\n  } else {\n    const index = (4 * rowIndex) - 1 + columnIndex\n    content = memory.length > index  ? memory[index] : 0\n  }\n\n  return (\n    <div style={style}>\n      {convertToHexNumber(content)}\n    </div>\n  )\n}\n","import React, { useContext } from \"react\"\nimport { FixedSizeGrid as Grid } from 'react-window';\nimport ApplicationContext from '@/context/Context'\nimport MemoryCell from '@/components/memory-component/MemoryCell';\n\nconst GRID_HEADERS = ['Address', '0-1', '2-3', '4-5', '6-7']\n\nexport default function MemoryComponent() {\n  const { dispatch, state } = useContext(ApplicationContext);\n\n  return <div>\n    <h2 style={{\n      textAlign: 'center'\n    }}>Memory</h2>\n    <div>\n    <div\n      style={{\n        height: 30,\n        width: 400,\n        display: 'flex',\n        borderBottom: 'black solid 1px'\n      }}\n    >\n      {GRID_HEADERS.map((header, index) => (\n        <span\n          key={index}\n          style={{\n            width: 80\n          }}\n        >\n          {header}\n        </span>\n      ))}\n\n    </div>\n    <Grid\n      columnCount={5}\n      columnWidth={80}\n      height={400}\n      rowCount={200000/4}\n      rowHeight={30}\n      width={400}\n    >\n      {(gridProps) => <MemoryCell memory={state.memory} {...gridProps}/>}\n    </Grid>\n    </div>\n  </div>\n}\n","import React from 'react'\nimport { convertToHexNumber } from '@/utils/general'\nimport { COLORS } from '@/constants/general'\n\nexport default function SingleInstruction({\n  addressInstruction,\n  data,\n  index,\n  pc,\n  style,\n  handleCheckboxInput,\n  hasBreakpoint = false,\n  isCurrentBreakpoint = false\n}) {\n  const instruction = addressInstruction[data[index]]\n\n  function getBackgroundColor () {\n    if (isCurrentBreakpoint) {\n      return COLORS.PRIMARY_DARK\n    }\n\n    return instruction.address === pc ? COLORS.SECONDARY : '#FFFFFF'\n  }\n\n  function getColor () {\n    if (isCurrentBreakpoint) {\n      return COLORS.NEUTRAL\n    }\n\n    return instruction.address === pc ? COLORS.NEUTRAL : '#000000'\n  }\n\n  return (\n    <div\n    style={{\n      height: 30,\n      width: 800,\n      display: 'flex',\n      background: getBackgroundColor(),\n      color: getColor(),\n      ...style\n     }}\n    >\n      <span\n        style={{\n          width: 66\n        }}>\n          <input\n            type=\"checkbox\"\n            checked={hasBreakpoint}\n            value={instruction.address}\n            onChange={handleCheckboxInput}\n          />\n      </span>\n      <span\n          style={{\n            width: 200\n          }}\n        >\n           {instruction.addrStr}\n        </span>\n        <span\n          style={{\n            width: 266\n          }}\n        >\n           { instruction.content }\n        </span>\n        <span\n          style={{\n            width: 266\n          }}\n        >\n          { instruction.assembler }\n        </span>\n    </div>\n  )\n}\n","import React, { useEffect, useRef, useState , useContext} from 'react';\nimport { FixedSizeList as List } from 'react-window'\nimport ApplicationContext from '@/context/Context'\nimport { cpuParser } from '@/services/cpu/CpuParser';\nimport { SET_INSTRUCTIONS, SET_BREAKPOINTS, CLEAR_ALL_BREAKPOINTS } from '@/store/Actions';\nimport SingleInstruction from '@/components/instructions-component/SingleInstruction'\nimport { COLORS } from '@/constants/general';\n\nconst ROW_HEADER = [\n  {\n    isHeader: true,\n    label: 'Address'\n  },\n  {\n    isHeader: true,\n    label: 'Content'\n  },\n  {\n    isHeader: true,\n    label: 'Assembler'\n  }\n]\nconst ROW_OFFSET = 8\n\nexport default function InstructionsComponent() {\n  const { dispatch, state } = useContext(ApplicationContext);\n\n  const [currentPcPointer, setCurrentPcPointer] = useState(0)\n  const [areInstructionsVisible, setInstructionsVisibility] = useState(true)\n\n  const myRef = useRef(null)\n\n  function addInstructionBreakpoint (address) {\n    dispatch({type: SET_BREAKPOINTS, payload: address})\n  }\n\n  useEffect(() => {\n    async function parseInstructions() {\n      if ((state.hasSymbolTable && Object.keys(state.symbolTable).length) || !state.hasSymbolTable) {\n        const instructionsSet = await cpuParser.parse(state.memory, state.symbolTable);\n\n        dispatch({ type: SET_INSTRUCTIONS, payload: instructionsSet });\n      }\n    }\n\n    if (state.memory.length > 0) {\n      parseInstructions()\n    }\n\n  }, [state.memory, state.symbolTable])\n\n  useEffect(() => {\n    if (areInstructionsVisible && (state.context.pc / 2 > currentPcPointer + 4 || state.context.pc / 2 < currentPcPointer - 4)) {\n      setCurrentPcPointer(state.context.pc  / 2 - 4)\n      myRef.current.scrollToItem(state.context.pc / 2 - 4)\n    }\n  }, [state.context.pc])\n\n  useEffect(() => {\n    if (areInstructionsVisible) {\n      setCurrentPcPointer(currentPcPointer  + 2)\n      myRef.current.scrollToItem(currentPcPointer + 10)\n    }\n  }, [areInstructionsVisible])\n\n  useEffect(() => {\n    if(Object.keys(state.addressInstruction).length) {\n      setCurrentPcPointer(45056/2 + 10)\n      myRef.current.scrollToItem(45056/2 + 10)\n    }\n  }, [state.addressInstruction])\n  return (\n      <div>\n        <div className=\"instruction-buttons\">\n          <button className=\"my-button\" onClick={() => {\n            setInstructionsVisibility((currState) => !currState)\n          }}>\n            {areInstructionsVisible ? 'Hide' : 'Show'} instructions\n          </button>\n          <button className=\"my-button\" onClick={() => {\n            dispatch({ type: CLEAR_ALL_BREAKPOINTS})\n          }}>\n            Clear all breakpoints\n          </button>\n        </div>\n        {areInstructionsVisible &&\n          <div\n            style={{\n              height: 30,\n              width: 800,\n              display: 'flex'\n            }}\n          >\n            {ROW_HEADER.map((header, index) => (\n              <span\n                key={index}\n                style={{\n                  width: 266\n                }}\n              >\n                {header.label}\n              </span>\n            ))}\n\n          </div>\n        }\n        {areInstructionsVisible && Object.keys(state.addressInstruction) &&\n        <List\n          ref={myRef}\n          itemData={Object.keys(state.addressInstruction)}\n          itemCount={Object.keys(state.addressInstruction).length}\n          height={500}\n          itemSize={30}\n          overscanCount={15}\n          width={800}\n          style={{\n          border: `${COLORS.PRIMARY} solid 1px`,\n          borderRadius: 5\n          }}\n          itemKey={(index, data) => { return data[index]}}\n        >\n        {({ index, data, style}) => (\n          <SingleInstruction\n            index={index}\n            data={data}\n            style={style}\n            addressInstruction={state.addressInstruction}\n            pc={state.context.pc}\n            hasBreakpoint={state.breakpoints.includes(state.addressInstruction[data[index]].address)}\n            handleCheckboxInput={() => addInstructionBreakpoint(state.addressInstruction[data[index]].address)}\n            isCurrentBreakpoint={state.currentBreakpoint === state.addressInstruction[data[index]].address && state.addressInstruction[data[index]].address === state.context.pc}\n          />\n        )}\n        </List>\n        }\n      </div>\n    )\n}\n","import React, { useState }  from 'react';\nimport ControlComponent from '@/components/ControlComponent';\nimport OutputComponent from '@/components/OutputComponent';\nimport RegistersAndFlagsComponent from '@/components/RegistersAndFlagsComponent';\nimport StackFrameComponent from '@/components/StackFrameComponent';\nimport MemoryComponent from '@/components/MemoryComponent';\nimport Modal from 'react-modal';\nimport InstructionsComponent from '@/components/InstructionsComponent';\n\nexport default function HomePage() {\n\n  const [isMemoryModalOpen, setIsMemoryModalOpen] = useState(false)\n  const [isStackFrameModalOpen, setIsStackFrameModalOpen] = useState(false)\n\n\n  return (\n    <div>\n      <h1>FPGA EMULTAOR</h1>\n      <div className=\"horizontal-alignment\">\n        <div className=\"vertical-alignment home-part-1\">\n          <ControlComponent />\n          <OutputComponent />\n        </div>\n        <div className=\"vertical-alignment\">\n          <RegistersAndFlagsComponent />\n          <InstructionsComponent />\n          <div className=\"horizontal-alignment\">\n            <button className=\"my-button\" onClick={() => setIsStackFrameModalOpen(true)}>Stack Frame</button>\n            <button className=\"my-button\" onClick={() => setIsMemoryModalOpen(true)}>Memory</button>\n          </div>\n        </div>\n      </div>\n      <Modal\n        style={{\n          content : {\n            top                   : '50%',\n            left                  : '50%',\n            right                 : 'auto',\n            bottom                : 'auto',\n            marginRight           : '-50%',\n          }\n        }}\n        ariaHideApp={false}\n        isOpen={isStackFrameModalOpen}\n        contentLabel=\"Example Modal\"\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        onRequestClose={() => setIsStackFrameModalOpen(false)}\n      >\n        <StackFrameComponent />\n      </Modal>\n\n      <Modal\n        ariaHideApp={false}\n        style={{\n          content : {\n            top: '30%',\n            left: 'auto',\n            right: '10px',\n            bottom: 'auto',\n          }\n        }}\n        isOpen={isMemoryModalOpen}\n        contentLabel=\"Example Modal\"\n        shouldCloseOnOverlayClick={true}\n        shouldCloseOnEsc={true}\n        onRequestClose={() => setIsMemoryModalOpen(false)}\n      >\n        <MemoryComponent />\n      </Modal>\n    </div>\n  );\n}\n","export function SET_MEMORY_HANDLER (currState, payload) {\n  return {\n    ...currState,\n    memory: payload\n  };\n}\n\nexport function SET_INSTRUCTIONS_HANDLER (\n  currState,\n  { lines, addressInstruction }\n) {\n  return {\n    ...currState,\n    lines,\n    addressInstruction\n  };\n}\n\nexport function SET_CONTEXT_HANDLER (currState, context) {\n  return {\n    ...currState,\n    context: {\n      ...currState.context,\n      ...context\n    }\n  }\n}\nexport function SET_OUTPUT_PAYLOAD_HANDLER (currState, outputPayload) {\n  return {\n    ...currState,\n    outputPayload: { ...outputPayload }\n  }\n}\n\nexport function SET_SYMBOLS_HANDLER (currState, symbolsMapper) {\n  return {\n    ...currState,\n    symbolTable: { ...symbolsMapper }\n  }\n}\n\nexport function SET_HAS_SYMBOL_TABLE_HANDLER (currState, hasSymbolTable) {\n  return {\n    ...currState,\n    hasSymbolTable\n  }\n}\n\nexport function RESET_STATE_HANDLER (currState, reset) {\n  return {\n    ...currState,\n    reset\n  }\n}\n\nexport const SET_CURRENT_BREAKPOINT_HANDLER = (currState, breakpointAddress) => {\n  return {\n    ...currState,\n    currentBreakpoint: breakpointAddress\n  }\n}\n\nexport const SET_BREAKPOINTS_HANDLER = (currState, breakpoint) => {\n  const instructionIndex = currState.breakpoints.findIndex((instructionAddress) => instructionAddress === breakpoint)\n\n  if (instructionIndex !== -1) {\n    return {\n      ...currState,\n      breakpoints: [\n        ...currState.breakpoints.slice(0, instructionIndex),\n        ...currState.breakpoints.slice(instructionIndex + 1)\n      ]\n    }\n  }\n\n  return {\n    ...currState,\n    breakpoints: [\n      ...currState.breakpoints,\n      breakpoint\n    ]\n  }\n}\n\nexport const CLEAR_ALL_BREAKPOINTS_HANDLER = (currState) => {\n  return {\n    ...currState,\n    breakpoints: []\n  }\n}","import * as ActionHandlers from './ActionHandlers';\nimport * as Actions from './Actions';\nimport { OUTPUT_MODES } from '@/constants/general'\n\nexport const initialState = {\n  memory: [],\n  lines: [],\n  addressInstruction: {},\n  symbolTable: {},\n  context: {\n    r0: 0,\n\t\tr1: 0,\n\t\tr2: 0,\n\t\tr3: 0,\n\t\tr4: 0,\n\t\tr5: 0,\n\t\tr6: 0,\n\t\tr7: 0,\n\t\tr8: 0,\n\t\tr9: 0,\n\t\tr10: 0,\n\t\tr11: 0,\n\t\tr12: 0,\n\t\tr13: 0,\n\t\tpc: 0,\n\t\tsp: 0,\n\t\th: 0,\n\t\tf: 0\n\t},\n\toutputPayload: null,\n\toutputMode: OUTPUT_MODES.TEXT,\n\thasSymbolTable: false,\n\treset: 0,\n\tcurrentBreakpoint: null,\n\tbreakpoints: []\n};\n\nexport const reducer = function(state, action) {\n  try {\n    return ACTION_HANDLER[action.type](state, action.payload);\n  } catch (error) {\n    alert('there is no action with this type');\n    return state;\n  }\n};\n\nconst ACTION_HANDLER = {\n  [Actions.SET_MEMORY]: ActionHandlers.SET_MEMORY_HANDLER,\n  [Actions.SET_INSTRUCTIONS]: ActionHandlers.SET_INSTRUCTIONS_HANDLER,\n\t[Actions.SET_CONTEXT]: ActionHandlers.SET_CONTEXT_HANDLER,\n\t[Actions.UPDATE_OUTPUT]: ActionHandlers.SET_OUTPUT_PAYLOAD_HANDLER,\n\t[Actions.SET_SYMBOLS]: ActionHandlers.SET_SYMBOLS_HANDLER,\n\t[Actions.HAS_SYMBOL_TABLE]: ActionHandlers.SET_HAS_SYMBOL_TABLE_HANDLER,\n\t[Actions.RESET_STATE]: ActionHandlers.RESET_STATE_HANDLER,\n\t[Actions.SET_CURRENT_BREAKPOINT]: ActionHandlers.SET_CURRENT_BREAKPOINT_HANDLER,\n\t[Actions.SET_BREAKPOINTS]: ActionHandlers.SET_BREAKPOINTS_HANDLER,\n\t[Actions.CLEAR_ALL_BREAKPOINTS]: ActionHandlers.CLEAR_ALL_BREAKPOINTS_HANDLER\n};\n","import React, { useReducer } from 'react';\nimport HomePage from './pages/HomePage';\nimport ApplicationContext from './context/Context';\nimport { reducer, initialState } from './store/Reducer';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div>\n      <ApplicationContext.Provider value={{ state, dispatch }}>\n        <HomePage />\n      </ApplicationContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { CpuParserClass } from '@/services/cpu/CpuParser'\nimport Instruction from '@/services/instructions/Instruction'\n\nclass CpuEngine {\n\tconstructor() {\n\t\tthis.irq0 = false\n\t\tthis.irq2_pressed = false\n\t\tthis.irq2_released = false\n\n\t\tthis.irq0_address = 8\n\t\tthis.irq2_pressed_address = 32\n\t\tthis.irq2_released_address = 40\n\t\tthis.inIrq = false\n\n\t\tthis.memory = []\n\t\tthis.lines = []\n\t\tthis.addressInstruction = {}\n\n\t\tthis.context = {}\n\n\t\tthis.running = true\n\t}\n\n  run() {\n\t\tlet instructionResponse;\n\n\t\tif (\n\t\t\tthis.irq0 ||\n\t\t\tthis.irq2_pressed ||\n\t\t\tthis.irq2_released\n\t\t) {\n\t\t\tthis.prepareIrq()\n\t\t}\n\n\t\tconst instruction = this.addressInstruction[Instruction.fix(this.context.pc)]\n\n\t\ttry {\n\t\t\tinstructionResponse = instruction.exec({\n\t\t\t\tcontext: this.context,\n\t\t\t\tmemory: this.memory\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tthis.running = false\n\t\t\tconsole.log(error)\n\t\t}\n\n\t\treturn {\n\t\t\tshouldRunAgain: this.running,\n\t\t\tcontext: this.context,\n\t\t\tmemory: this.memory,\n\t\t\tinstructionResponse: {\n\t\t\t\t...instructionResponse,\n\t\t\t}\n\t\t}\n  }\n\n  prepareIrq() {\n\t\tif (this.irq0 && this.memory[this.irq0_address] === 0) {\n\t\t\t// synchronized (this) { this.notify() }\n\t\t\treturn\n\t\t}\n\n\t\tif (this.irq2_pressed && this.memory[this.irq2_pressed_address / 2] === 0) {\n\t\t\t// synchronized (this) { this.notify() }\n\t\t\treturn\n\t\t}\n\n\t\tif (this.irq2_released && this.memory[this.irq2_released_address / 2] === 0) {\n\t\t\t// synchronized (this) { this.notify() }\n\t\t\treturn\n\t\t}\n\n\t\t// Push flags\n\t\tthis.context.sp -= 2\n\t\tthis.memory[Math.floor(Instruction.fix(this.context.sp) / 2)] = this.context.f\n\n\t\t// Push PC\n\t\tthis.context.sp -= 4\n\t\tthis.memory[Math.floor(Instruction.fix(this.context.sp) / 2)] = this.context.pc  >> 16\n\t\tthis.memory[Math.floor(Instruction.fix(this.context.sp + 2) / 2)] = this.context.pc  & 0xFFFF\n\n\t\tif (this.irq0) {\n\t\t\t// Jump to the IRQ1 handler\n\t\t\tthis.context.pc  = this.irq0_address\n\n\t\t\tlet instruction = CpuParserClass.getInstruction(this.memory, this.irq0_address)\n\t\t\tinstruction.setContent()\n\n\t\t\tthis.lines[this.irq0_address] = instruction\n\n\t\t\tinstruction.tableLine = this.irq0_address\n\n\t\t\tthis.addressInstruction[this.irq0_address] = instruction\n\n\t\t\tthis.irq0 = false\n\t\t} else if (this.irq2_pressed) {\n\t\t\tthis.irq2_pressed = false\n\t\t\t// Jump to the IRQ2 pressed handler\n\n\t\t\tthis.context.pc  = this.irq2_pressed_address\n\n\t\t\tlet instruction = CpuParserClass.getInstruction(this.memory, this.irq2_pressed_address)\n\t\t\tinstruction.setContent()\n\n\t\t\tthis.lines[this.irq2_pressed_address]= instruction\n\n\t\t\tinstruction.tableLine = this.irq2_pressed_address\n\n\t\t\tthis.addressInstruction[this.irq2_pressed_address] = instruction\n\t\t} else if (this.irq2_released) {\n\t\t\tthis.irq2_released = false\n\t\t\t// Jump to the IRQ2 released handler\n\n\t\t\tthis.context.pc  = this.irq2_released_address\n\n\t\t\tlet instruction = CpuParserClass.getInstruction(this.memory, this.irq2_released_address)\n\t\t\tinstruction.setContent()\n\n\t\t\tthis.lines[this.irq2_released_address] = instruction\n\n\t\t\tinstruction.tableLine = this.irq2_released_address\n\n\t\t\tthis.addressInstruction[this.irq2_released_address] = instruction\n\t\t}\n\t}\n\n  stop() {\n\t\t\tthis.running = false\n\n\t\t// if (this.fromStepOver) {\n\t\t// \tthis.fromStepOver = false\n\t\t// \tInstruction i = context.mdl.addr_instr[Instruction.fix(context.pc )]\n\t\t// \tif (i.breakPointStepOver) {\n\t\t// \t\ti.breakPointStepOver = false\n\t\t// \t\tthis.context.mdl.fireTableDataChanged()\n\t\t// \t}\n\t\t// }\n\t\t// refreshUI(context.mdl.addr_instr[Instruction.fix(context.pc )])\n\t}\n\n\thalt () {\n\t\tthis.running = false\n\t}\n\n\tinject(memory, lines, addressInstruction) {\n\t\tthis.memory = memory\n\t\tthis.lines = lines\n\t\tthis.addressInstruction = addressInstruction\n\n\t\tthis.context = {\n\t\t\tr0: 0,\n\t\t\tr1: 0,\n\t\t\tr2: 0,\n\t\t\tr3: 0,\n\t\t\tr4: 0,\n\t\t\tr5: 0,\n\t\t\tr6: 0,\n\t\t\tr7: 0,\n\t\t\tr8: 0,\n\t\t\tr9: 0,\n\t\t\tr10: 0,\n\t\t\tr11: 0,\n\t\t\tr12: 0,\n\t\t\tr13: 0,\n\t\t\tpc: 45056,\n\t\t\tsp: 0,\n\t\t\th: 0,\n\t\t\tf: 0\n\t\t}\n\t}\n\n\tsetContextField(field, value) {\n\t\tthis.context = {\n\t\t\t...this.context,\n\t\t\t[field]: value\n\t\t}\n\t}\n}\n\nconst cpuEngine = new CpuEngine()\n\nexport default cpuEngine\n"],"sourceRoot":""}